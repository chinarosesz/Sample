{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.4.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Semmle Core",
          "productSuite": "Semmle",
          "version": "1.20.2",
          "rules": [
            {
              "id": "SM00277",
              "name": "cs/equals-on-arrays",
              "shortDescription": {
                "text": "Equals on collections"
              },
              "fullDescription": {
                "text": "Comparing collections using the Equals method only checks reference equality. A deep compare is more likely what is needed."
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Equals on collections",
                "opaque-id": "SM00277",
                "description": "Comparing collections using the Equals method only checks reference equality. A deep compare is more likely what is needed.",
                "id": "cs/equals-on-arrays",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/EqualsArray.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00294",
              "name": "cs/equals-on-unrelated-types",
              "shortDescription": {
                "text": "Equals on incomparable types"
              },
              "fullDescription": {
                "text": "Finds calls of the form 'x.Equals(y)' with incomparable types for x and y."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Equals on incomparable types",
                "opaque-id": "SM00294",
                "description": "Finds calls of the form 'x.Equals(y)' with incomparable types for x and y.",
                "id": "cs/equals-on-unrelated-types",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/IncomparableEquals.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00478",
              "name": "cs/null-argument-to-equals",
              "shortDescription": {
                "text": "Null argument to Equals(object)"
              },
              "fullDescription": {
                "text": "Calls of the form 'o.Equals(null)' always return false for non-null 'o', and throw a 'NullReferenceException' when 'o' is null."
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Null argument to Equals(object)",
                "opaque-id": "SM00478",
                "description": "Calls of the form 'o.Equals(null)' always return false for non-null 'o', and\n              throw a 'NullReferenceException' when 'o' is null.",
                "id": "cs/null-argument-to-equals",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/API Abuse/NullArgumentToEquals.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00288",
              "name": "cs/reference-equality-with-object",
              "shortDescription": {
                "text": "Reference equality test on System.Object"
              },
              "fullDescription": {
                "text": "Comparisons ('==' or '!=') between something of type 'System.Object' and something of another type will use reference comparison, which may not have been what was intended."
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "external/cwe/cwe-595"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Reference equality test on System.Object",
                "opaque-id": "SM00288",
                "description": "Comparisons ('==' or '!=') between something of type 'System.Object' and something of another\n              type will use reference comparison, which may not have been what was intended.",
                "id": "cs/reference-equality-with-object",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/ObjectComparison.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00283",
              "name": "cs/reference-equality-on-valuetypes",
              "shortDescription": {
                "text": "Call to ReferenceEquals(...) on value type expressions"
              },
              "fullDescription": {
                "text": "'ReferenceEquals(...)' always returns false on value types - its use is at best redundant and at worst erroneous."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "external/cwe/cwe-595"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Call to ReferenceEquals(...) on value type expressions",
                "opaque-id": "SM00283",
                "description": "'ReferenceEquals(...)' always returns false on value types - its use is at best redundant and at worst erroneous.",
                "id": "cs/reference-equality-on-valuetypes",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/ReferenceEqualsOnValueTypes.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00346",
              "name": "cs/class-name-comparison",
              "shortDescription": {
                "text": "Erroneous class compare"
              },
              "fullDescription": {
                "text": "Finds checks of an object's type based on its class name"
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "external/cwe/cwe-486"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Erroneous class compare",
                "opaque-id": "SM00346",
                "description": "Finds checks of an object's type based on its class name",
                "id": "cs/class-name-comparison",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/ErroneousClassCompare.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00275",
              "name": "cs/constant-comparison",
              "shortDescription": {
                "text": "Comparison is constant"
              },
              "fullDescription": {
                "text": "The result of the comparison is always the same."
              },
              "properties": {
                "tags": [
  "correctness"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Comparison is constant",
                "opaque-id": "SM00275",
                "description": "The result of the comparison is always the same.",
                "id": "cs/constant-comparison",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/ConstantComparison.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00287",
              "name": "cs/incomplete-parity-check",
              "shortDescription": {
                "text": "Bad parity check"
              },
              "fullDescription": {
                "text": "Code that uses 'x % 2 == 1' or 'x % 2 > 0' to check whether a number is odd does not work for negative numbers."
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "low",
                "name": "Bad parity check",
                "opaque-id": "SM00287",
                "description": "Code that uses 'x % 2 == 1' or 'x % 2 > 0' to check whether a number is odd does not\n              work for negative numbers.",
                "id": "cs/incomplete-parity-check",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/BadCheckOdd.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00274",
              "name": "cs/equality-on-floats",
              "shortDescription": {
                "text": "Equality check on floating point values"
              },
              "fullDescription": {
                "text": "Equality checks on floating point values can yield unexpected results."
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Equality check on floating point values",
                "opaque-id": "SM00274",
                "description": "Equality checks on floating point values can yield unexpected results.",
                "id": "cs/equality-on-floats",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/EqualityCheckOnFloats.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00281",
              "name": "cs/loss-of-precision",
              "shortDescription": {
                "text": "Possible loss of precision"
              },
              "fullDescription": {
                "text": "Dividing or multiplying integral expressions and converting the result to a floating-point value may result in a loss of precision."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "security",
  "external/cwe/cwe-190",
  "external/cwe/cwe-192",
  "external/cwe/cwe-197",
  "external/cwe/cwe-681"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Possible loss of precision",
                "opaque-id": "SM00281",
                "description": "Dividing or multiplying integral expressions and converting the result to a\n              floating-point value may result in a loss of precision.",
                "id": "cs/loss-of-precision",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/PossibleLossOfPrecision.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00284",
              "name": "cs/self-assignment",
              "shortDescription": {
                "text": "Self-assignment"
              },
              "fullDescription": {
                "text": "Assigning a variable to itself is useless and very likely indicates an error in the code."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "logic"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Self-assignment",
                "opaque-id": "SM00284",
                "description": "Assigning a variable to itself is useless and very likely indicates an error in the code.",
                "id": "cs/self-assignment",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/SelfAssignment.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00276",
              "name": "cs/nested-loops-with-same-variable",
              "shortDescription": {
                "text": "Nested loops with same variable"
              },
              "fullDescription": {
                "text": "The behavior of nested loops that both have the same iteration variable can be difficult to understand, as the inner loop will affect the iteration of the outer loop. Most of the time this is an unintentional typo and a bug; in other cases it is merely very bad practice."
              },
              "properties": {
                "tags": [
  "maintainability",
  "correctness",
  "logic"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Nested loops with same variable",
                "opaque-id": "SM00276",
                "description": "The behavior of nested loops that both have the same iteration variable can be difficult to understand, as the inner loop will affect the\n              iteration of the outer loop. Most of the time this is an unintentional typo and a bug; in other cases it is merely very bad practice.",
                "id": "cs/nested-loops-with-same-variable",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/NestedLoopsSameVariable.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00278",
              "name": "cs/non-short-circuit",
              "shortDescription": {
                "text": "Potentially dangerous use of non-short-circuit logic"
              },
              "fullDescription": {
                "text": "The & and | operators do not use short-circuit evaluation and can be dangerous when applied to boolean operands. In particular, their use can result in errors if the left-hand operand checks for cases in which it is not safe to evaluate the right-hand one."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "logic",
  "external/cwe/cwe-480",
  "external/cwe/cwe-691"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Potentially dangerous use of non-short-circuit logic",
                "opaque-id": "SM00278",
                "description": "The & and | operators do not use short-circuit evaluation and can be dangerous when applied to boolean operands. In particular, their\n              use can result in errors if the left-hand operand checks for cases in which it is not safe to evaluate the right-hand one.",
                "id": "cs/non-short-circuit",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/DangerousNonShortCircuitLogic.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00279",
              "name": "cs/impossible-array-cast",
              "shortDescription": {
                "text": "Impossible array cast"
              },
              "fullDescription": {
                "text": "Downcasts on expressions of array type are sometimes guaranteed to fail at runtime, e.g. those applied to array creation expressions."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "logic"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Impossible array cast",
                "opaque-id": "SM00279",
                "description": "Downcasts on expressions of array type are sometimes guaranteed to fail at runtime, e.g. those applied to array creation expressions.",
                "id": "cs/impossible-array-cast",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/ImpossibleArrayCast.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00299",
              "name": "cs/invalid-dynamic-call",
              "shortDescription": {
                "text": "Bad dynamic call"
              },
              "fullDescription": {
                "text": "The type of the target of a dynamic invocation expression must have a method or operator with the appropriate signature, or an exception will be thrown."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "logic",
  "external/cwe/cwe-628"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Bad dynamic call",
                "opaque-id": "SM00299",
                "description": "The type of the target of a dynamic invocation expression must have a method or operator with the appropriate signature, or an exception will be thrown.",
                "id": "cs/invalid-dynamic-call",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/Dynamic/BadDynamicCall.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00344",
              "name": "cs/catch-nullreferenceexception",
              "shortDescription": {
                "text": "Poor error handling: catch of NullReferenceException"
              },
              "fullDescription": {
                "text": "Finds catch clauses that catch NullReferenceException"
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "external/cwe/cwe-395"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "very-high",
                "name": "Poor error handling: catch of NullReferenceException",
                "opaque-id": "SM00344",
                "description": "Finds catch clauses that catch NullReferenceException",
                "id": "cs/catch-nullreferenceexception",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/CatchOfNullReferenceException.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00467",
              "name": "cs/unchecked-return-value",
              "shortDescription": {
                "text": "Unchecked return value"
              },
              "fullDescription": {
                "text": "If most of the calls to a method use the return value of that method, the calls that do not check the return value may be mistakes."
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "external/cwe/cwe-252",
  "statistical",
  "non-attributable"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "low",
                "name": "Unchecked return value",
                "opaque-id": "SM00467",
                "description": "If most of the calls to a method use the return value\n              of that method, the calls that do not check the return value may be mistakes.",
                "id": "cs/unchecked-return-value",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/API Abuse/UncheckedReturnValue.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00258",
              "name": "cs/dereferenced-value-is-always-null",
              "shortDescription": {
                "text": "Dereferenced variable is always null"
              },
              "fullDescription": {
                "text": "Dereferencing a variable whose value is 'null' causes a 'NullReferenceException'."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "exceptions",
  "external/cwe/cwe-476"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "very-high",
                "name": "Dereferenced variable is always null",
                "opaque-id": "SM00258",
                "description": "Dereferencing a variable whose value is 'null' causes a 'NullReferenceException'.",
                "id": "cs/dereferenced-value-is-always-null",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/CSI/NullAlways.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00259",
              "name": "cs/dereferenced-value-may-be-null",
              "shortDescription": {
                "text": "Dereferenced variable may be null"
              },
              "fullDescription": {
                "text": "Dereferencing a variable whose value may be 'null' may cause a 'NullReferenceException'."
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "exceptions",
  "external/cwe/cwe-476"
],
                "suites": "best-practice",
                "kind": "path-problem",
                "precision": "high",
                "name": "Dereferenced variable may be null",
                "opaque-id": "SM00259",
                "description": "Dereferencing a variable whose value may be 'null' may cause a\n              'NullReferenceException'.",
                "id": "cs/dereferenced-value-may-be-null",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/CSI/NullMaybe.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00296",
              "name": "cs/misleading-indentation",
              "shortDescription": {
                "text": "Misleading indentation"
              },
              "fullDescription": {
                "text": "If a control structure does not use braces, misleading indentation makes it difficult to see which statements are within its scope."
              },
              "properties": {
                "tags": [
  "changeability",
  "correctness",
  "logic"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Misleading indentation",
                "opaque-id": "SM00296",
                "description": "If a control structure does not use braces, misleading indentation makes it\n              difficult to see which statements are within its scope.",
                "id": "cs/misleading-indentation",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/Statements/UseBraces.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00302",
              "name": "cs/test-for-negative-container-size",
              "shortDescription": {
                "text": "Container size compared to zero."
              },
              "fullDescription": {
                "text": "Comparing the size of a container to zero with this operator will always return the same value."
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "logic"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "very-high",
                "name": "Container size compared to zero.",
                "opaque-id": "SM00302",
                "description": "Comparing the size of a container to zero with this operator will always return the same value.",
                "id": "cs/test-for-negative-container-size",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/Collections/ContainerSizeCmpZero.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00301",
              "name": "cs/index-out-of-bounds",
              "shortDescription": {
                "text": "Off-by-one comparison against container length"
              },
              "fullDescription": {
                "text": "The index is compared to be less than or equal to the container length, then used in an array indexing operation that could be out of bounds."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "logic",
  "external/cwe/cwe-193"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Off-by-one comparison against container length",
                "opaque-id": "SM00301",
                "description": "The index is compared to be less than or equal to the container length, then used\n              in an array indexing operation that could be out of bounds.",
                "id": "cs/index-out-of-bounds",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/Collections/ContainerLengthCmpOffByOne.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00250",
              "name": "cs/unsafe-sync-on-field",
              "shortDescription": {
                "text": "Futile synchronization on field"
              },
              "fullDescription": {
                "text": "Synchronizing on a field and updating that field while the lock is held is unlikely to provide the desired thread safety."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "concurrency",
  "external/cwe/cwe-662",
  "external/cwe/cwe-366"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Futile synchronization on field",
                "opaque-id": "SM00250",
                "description": "Synchronizing on a field and updating that field while the lock is held is unlikely\n              to provide the desired thread safety.",
                "id": "cs/unsafe-sync-on-field",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Concurrency/FutileSyncOnField.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00247",
              "name": "cs/locked-wait",
              "shortDescription": {
                "text": "A lock is held during a wait"
              },
              "fullDescription": {
                "text": "A lock is held during a call to System.Threading.Monitor.Wait(). This can lead to deadlocks and performance problems."
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "concurrency",
  "external/cwe/cwe-662",
  "external/cwe/cwe-833"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "A lock is held during a wait",
                "opaque-id": "SM00247",
                "description": "A lock is held during a call to System.Threading.Monitor.Wait(). This can lead to deadlocks and performance problems.",
                "id": "cs/locked-wait",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Concurrency/LockedWait.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00248",
              "name": "cs/inconsistent-lock-sequence",
              "shortDescription": {
                "text": "Inconsistent lock sequence"
              },
              "fullDescription": {
                "text": "Locking in an inconsistent sequence can lead to deadlock."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "correctness",
  "concurrency",
  "external/cwe/cwe-662"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Inconsistent lock sequence",
                "opaque-id": "SM00248",
                "description": "Locking in an inconsistent sequence can lead to deadlock.",
                "id": "cs/inconsistent-lock-sequence",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Concurrency/LockOrder.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00249",
              "name": "cs/unsynchronized-getter",
              "shortDescription": {
                "text": "Inconsistently synchronized property"
              },
              "fullDescription": {
                "text": "If a property has a lock in its setter, but not in its getter, then the value returned by the getter can be inconsistent."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "correctness",
  "concurrency",
  "external/cwe/cwe-662"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Inconsistently synchronized property",
                "opaque-id": "SM00249",
                "description": "If a property has a lock in its setter, but not in its getter,\n              then the value returned by the getter can be inconsistent.",
                "id": "cs/unsynchronized-getter",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Concurrency/SynchSetUnsynchGet.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00246",
              "name": "cs/unsafe-double-checked-lock",
              "shortDescription": {
                "text": "Double-checked lock is not thread-safe"
              },
              "fullDescription": {
                "text": "A repeated check on a non-volatile field is not thread-safe on some platforms, and could result in unexpected behavior."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "correctness",
  "concurrency",
  "external/cwe/cwe-609"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Double-checked lock is not thread-safe",
                "opaque-id": "SM00246",
                "description": "A repeated check on a non-volatile field is not thread-safe on some platforms,\n              and could result in unexpected behavior.",
                "id": "cs/unsafe-double-checked-lock",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Concurrency/UnsafeLazyInitialization.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00408",
              "name": "cs/web/debug-binary",
              "shortDescription": {
                "text": "Creating an ASP.NET debug binary may reveal sensitive information"
              },
              "fullDescription": {
                "text": "ASP.NET projects should not produce debug binaries when deploying to production as debug builds provide additional information useful to a malicious attacker."
              },
              "properties": {
                "tags": [
  "security",
  "maintainability",
  "frameworks/asp.net",
  "external/cwe/cwe-11"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "problem",
                "precision": "very-high",
                "name": "Creating an ASP.NET debug binary may reveal sensitive information",
                "opaque-id": "SM00408",
                "description": "ASP.NET projects should not produce debug binaries when deploying to production as\n              debug builds provide additional information useful to a malicious attacker.",
                "id": "cs/web/debug-binary",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-011/ASPNetDebug.ql",
                "microsoft.severity": "Important",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00481",
              "name": "cs/password-in-configuration",
              "shortDescription": {
                "text": "Password in configuration file"
              },
              "fullDescription": {
                "text": "Finds passwords in configuration files."
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-13",
  "external/cwe/cwe-256",
  "external/cwe/cwe-313"
],
                "suites": "sdl-recommended",
                "kind": "problem",
                "precision": "medium",
                "name": "Password in configuration file",
                "opaque-id": "SM00481",
                "description": "Finds passwords in configuration files.",
                "id": "cs/password-in-configuration",
                "microsoft.requirement": "Microsoft.Security.AccessControl.20022",
                "query-path": "/semmlecode-csharp-queries/Configuration/PasswordInConfigurationFile.ql",
                "microsoft.severity": "Critical",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00414",
              "name": "cs/path-injection",
              "shortDescription": {
                "text": "Uncontrolled data used in path expression"
              },
              "fullDescription": {
                "text": "Accessing paths influenced by users can allow an attacker to access unexpected resources."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-022",
  "external/cwe/cwe-023",
  "external/cwe/cwe-036",
  "external/cwe/cwe-073",
  "external/cwe/cwe-099"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "path-problem",
                "precision": "high",
                "name": "Uncontrolled data used in path expression",
                "opaque-id": "SM00414",
                "description": "Accessing paths influenced by users can allow an attacker to access unexpected resources.",
                "id": "cs/path-injection",
                "microsoft.alternative_tool_ID": "FXCOP.CA3003",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10027",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-022/TaintedPath.ql",
                "microsoft.severity": "Low",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM02729",
              "name": "cs/zipslip",
              "shortDescription": {
                "text": "Arbitrary file write during zip extraction (\"Zip Slip\")"
              },
              "fullDescription": {
                "text": "Extracting files from a malicious zip archive without validating that the destination file path is within the destination directory can cause files outside the destination directory to be overwritten."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-022"
],
                "suites": "sdl-recommended",
                "kind": "path-problem",
                "precision": "high",
                "name": "Arbitrary file write during zip extraction (\"Zip Slip\")",
                "opaque-id": "SM02729",
                "description": "Extracting files from a malicious zip archive without validating that the\n              destination file path is within the destination directory can cause files outside\n              the destination directory to be overwritten.",
                "id": "cs/zipslip",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-022/ZipSlip.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00406",
              "name": "cs/command-line-injection",
              "shortDescription": {
                "text": "Uncontrolled command line"
              },
              "fullDescription": {
                "text": "Using externally controlled strings in a command line may allow a malicious user to change the meaning of the command."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "correctness",
  "security",
  "external/cwe/cwe-078",
  "external/cwe/cwe-088"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "path-problem",
                "precision": "high",
                "name": "Uncontrolled command line",
                "opaque-id": "SM00406",
                "description": "Using externally controlled strings in a command line may allow a malicious\n              user to change the meaning of the command.",
                "id": "cs/command-line-injection",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-078/CommandInjection.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00407",
              "name": "cs/stored-command-line-injection",
              "shortDescription": {
                "text": "Uncontrolled command line from stored user input"
              },
              "fullDescription": {
                "text": "Using externally controlled strings in a command line may allow a malicious user to change the meaning of the command."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "correctness",
  "security",
  "external/cwe/cwe-078",
  "external/cwe/cwe-088"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "path-problem",
                "precision": "medium",
                "name": "Uncontrolled command line from stored user input",
                "opaque-id": "SM00407",
                "description": "Using externally controlled strings in a command line may allow a malicious\n              user to change the meaning of the command.",
                "id": "cs/stored-command-line-injection",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-078/StoredCommandInjection.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00430",
              "name": "cs/web/xss",
              "shortDescription": {
                "text": "Cross-site scripting"
              },
              "fullDescription": {
                "text": "Writing user input directly to a web page allows for a cross-site scripting vulnerability."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-079",
  "external/cwe/cwe-116"
],
                "suites": "sdl-recommended",
                "kind": "problem",
                "precision": "high",
                "name": "Cross-site scripting",
                "opaque-id": "SM00430",
                "description": "Writing user input directly to a web page\n              allows for a cross-site scripting vulnerability.",
                "id": "cs/web/xss",
                "microsoft.alternative_tool_ID": "FXCOP.CA3002",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10204",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-079/XSS.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00429",
              "name": "cs/web/stored-xss",
              "shortDescription": {
                "text": "Stored cross-site scripting"
              },
              "fullDescription": {
                "text": "Writing input from the database directly to a web page indicates a cross-site scripting vulnerability if the data was originally user-provided."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-079",
  "external/cwe/cwe-116"
],
                "suites": "sdl-recommended",
                "kind": "path-problem",
                "precision": "medium",
                "name": "Stored cross-site scripting",
                "opaque-id": "SM00429",
                "description": "Writing input from the database directly to a web page indicates a cross-site\n              scripting vulnerability if the data was originally user-provided.",
                "id": "cs/web/stored-xss",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10204",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-079/StoredXSS.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00438",
              "name": "cs/sql-injection",
              "shortDescription": {
                "text": "SQL query built from user-controlled sources"
              },
              "fullDescription": {
                "text": "Building a SQL query from user-controlled sources is vulnerable to insertion of malicious SQL code by the user."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-089"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "path-problem",
                "precision": "high",
                "name": "SQL query built from user-controlled sources",
                "opaque-id": "SM00438",
                "description": "Building a SQL query from user-controlled sources is vulnerable to insertion of\n              malicious SQL code by the user.",
                "id": "cs/sql-injection",
                "microsoft.alternative_tool_ID": "FXCOP.CA2100 FXCOP.CA3001",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10027",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-089/SqlInjection.ql",
                "microsoft.severity": "Low",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00437",
              "name": "cs/second-order-sql-injection",
              "shortDescription": {
                "text": "SQL query built from stored user-controlled sources"
              },
              "fullDescription": {
                "text": "Building a SQL query from stored user-controlled sources is vulnerable to insertion of malicious SQL code by the user."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-089"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "path-problem",
                "precision": "medium",
                "name": "SQL query built from stored user-controlled sources",
                "opaque-id": "SM00437",
                "description": "Building a SQL query from stored user-controlled sources is vulnerable to insertion\n              of malicious SQL code by the user.",
                "id": "cs/second-order-sql-injection",
                "microsoft.alternative_tool_ID": "FXCOP.CA2100 FXCOP.CA3001",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10027",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-089/SecondOrderSqlInjection.ql",
                "microsoft.severity": "Low",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00419",
              "name": "cs/ldap-injection",
              "shortDescription": {
                "text": "LDAP query built from user-controlled sources"
              },
              "fullDescription": {
                "text": "Building an LDAP query from user-controlled sources is vulnerable to insertion of malicious LDAP code by the user."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-090"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "path-problem",
                "precision": "high",
                "name": "LDAP query built from user-controlled sources",
                "opaque-id": "SM00419",
                "description": "Building an LDAP query from user-controlled sources is vulnerable to insertion of\n              malicious LDAP code by the user.",
                "id": "cs/ldap-injection",
                "microsoft.alternative_tool_ID": "FXCOP.CA3005",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10027",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-090/LDAPInjection.ql",
                "microsoft.severity": "Low",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00418",
              "name": "cs/stored-ldap-injection",
              "shortDescription": {
                "text": "LDAP query built from stored user-controlled sources"
              },
              "fullDescription": {
                "text": "Building an LDAP query from stored user-controlled sources is vulnerable to insertion of malicious LDAP code by the user."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-090"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "path-problem",
                "precision": "medium",
                "name": "LDAP query built from stored user-controlled sources",
                "opaque-id": "SM00418",
                "description": "Building an LDAP query from stored user-controlled sources is vulnerable to\n              insertion of malicious LDAP code by the user.",
                "id": "cs/stored-ldap-injection",
                "microsoft.alternative_tool_ID": "FXCOP.CA3005",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10027",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-090/StoredLDAPInjection.ql",
                "microsoft.severity": "Low",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00436",
              "name": "cs/xml/xpath-injection",
              "shortDescription": {
                "text": "XPath injection"
              },
              "fullDescription": {
                "text": "Building an XPath expression from user-controlled sources is vulnerable to insertion of malicious code by the user."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-643"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "path-problem",
                "precision": "high",
                "name": "XPath injection",
                "opaque-id": "SM00436",
                "description": "Building an XPath expression from user-controlled sources is vulnerable to insertion of\n              malicious code by the user.",
                "id": "cs/xml/xpath-injection",
                "microsoft.alternative_tool_ID": "FXCOP.CA3008 FXCOP.CA3073",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10027",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-643/XPathInjection.ql",
                "microsoft.severity": "Low",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00435",
              "name": "cs/xml/stored-xpath-injection",
              "shortDescription": {
                "text": "Stored XPath injection"
              },
              "fullDescription": {
                "text": "Building an XPath expression from stored data which may have been provided by the user is vulnerable to insertion of malicious code by the user."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-643"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "path-problem",
                "precision": "medium",
                "name": "Stored XPath injection",
                "opaque-id": "SM00435",
                "description": "Building an XPath expression from stored data which may have been provided by the\n              user is vulnerable to insertion of malicious code by the user.",
                "id": "cs/xml/stored-xpath-injection",
                "microsoft.alternative_tool_ID": "FXCOP.CA3008 FXCOP.CA3073",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-643/StoredXPathInjection.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00425",
              "name": "cs/code-injection",
              "shortDescription": {
                "text": "Improper control of generation of code"
              },
              "fullDescription": {
                "text": "Treating externally controlled strings as code can allow an attacker to execute malicious code."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-094",
  "external/cwe/cwe-095",
  "external/cwe/cwe-096"
],
                "suites": "sdl-recommended",
                "kind": "path-problem",
                "precision": "high",
                "name": "Improper control of generation of code",
                "opaque-id": "SM00425",
                "description": "Treating externally controlled strings as code can allow an attacker to execute\n              malicious code.",
                "id": "cs/code-injection",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10027",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-094/CodeInjection.ql",
                "microsoft.severity": "Low",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00416",
              "name": "cs/resource-injection",
              "shortDescription": {
                "text": "Resource injection"
              },
              "fullDescription": {
                "text": "Building a resource descriptor from untrusted user input is vulnerable to a malicious user providing an unintended resource."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-099"
],
                "suites": "sdl-recommended",
                "kind": "path-problem",
                "precision": "high",
                "name": "Resource injection",
                "opaque-id": "SM00416",
                "description": "Building a resource descriptor from untrusted user input is vulnerable to a\n              malicious user providing an unintended resource.",
                "id": "cs/resource-injection",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10027",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-099/ResourceInjection.ql",
                "microsoft.severity": "Low",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00404",
              "name": "cs/xml/missing-validation",
              "shortDescription": {
                "text": "Missing XML validation"
              },
              "fullDescription": {
                "text": "User input should not be processed as XML without validating it against a known schema."
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-112"
],
                "suites": "sdl-recommended",
                "kind": "path-problem",
                "precision": "high",
                "name": "Missing XML validation",
                "opaque-id": "SM00404",
                "description": "User input should not be processed as XML without validating it against a known\n              schema.",
                "id": "cs/xml/missing-validation",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10204",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-112/MissingXMLValidation.ql",
                "microsoft.severity": "Important",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00402",
              "name": "cs/web/disabled-header-checking",
              "shortDescription": {
                "text": "Header checking disabled"
              },
              "fullDescription": {
                "text": "Finds places where header checking is disabled."
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-113"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "problem",
                "precision": "high",
                "name": "Header checking disabled",
                "opaque-id": "SM00402",
                "description": "Finds places where header checking is disabled.",
                "id": "cs/web/disabled-header-checking",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10204",
                "query-path": "/semmlecode-csharp-queries/Security Features/HeaderCheckingDisabled.ql",
                "microsoft.severity": "Important",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00403",
              "name": "cs/log-forging",
              "shortDescription": {
                "text": "Log entries created from user input"
              },
              "fullDescription": {
                "text": "Building log entries from user-controlled sources is vulnerable to insertion of forged log entries by a malicious user."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-117"
],
                "suites": "sdl-recommended",
                "kind": "path-problem",
                "precision": "high",
                "name": "Log entries created from user input",
                "opaque-id": "SM00403",
                "description": "Building log entries from user-controlled sources is vulnerable to\n              insertion of forged log entries by a malicious user.",
                "id": "cs/log-forging",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10202",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-117/LogForging.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00426",
              "name": "cs/unvalidated-local-pointer-arithmetic",
              "shortDescription": {
                "text": "Unvalidated local pointer arithmetic"
              },
              "fullDescription": {
                "text": "Using the result of a virtual method call in pointer arithmetic without validation is dangerous because the method may be overridden by a subtype to return any value."
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-119",
  "external/cwe/cwe-120",
  "external/cwe/cwe-122",
  "external/cwe/cwe-788"
],
                "suites": "sdl-recommended",
                "kind": "problem",
                "precision": "high",
                "name": "Unvalidated local pointer arithmetic",
                "opaque-id": "SM00426",
                "description": "Using the result of a virtual method call in pointer arithmetic without\n              validation is dangerous because the method may be overridden by a subtype\n              to return any value.",
                "id": "cs/unvalidated-local-pointer-arithmetic",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10027",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-119/LocalUnvalidatedArithmetic.ql",
                "microsoft.severity": "Low",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00417",
              "name": "cs/sensitive-data-transmission",
              "shortDescription": {
                "text": "Information exposure through transmitted data"
              },
              "fullDescription": {
                "text": "Transmitting sensitive information to the user is a potential security risk."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-201"
],
                "suites": "sdl-recommended",
                "kind": "path-problem",
                "precision": "high",
                "name": "Information exposure through transmitted data",
                "opaque-id": "SM00417",
                "description": "Transmitting sensitive information to the user is a potential security risk.",
                "id": "cs/sensitive-data-transmission",
                "microsoft.alternative_tool_ID": "FXCOP.CA3004",
                "microsoft.requirement": "Microsoft.Security.Cryptography.10031",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-201/ExposureInTransmittedData.ql",
                "microsoft.severity": "Critical",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00431",
              "name": "cs/information-exposure-through-exception",
              "shortDescription": {
                "text": "Information exposure through an exception"
              },
              "fullDescription": {
                "text": "Leaking information about an exception, such as messages and stack traces, to an external user can expose implementation details that are useful to an attacker for developing a subsequent exploit."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-209",
  "external/cwe/cwe-497"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "path-problem",
                "precision": "high",
                "name": "Information exposure through an exception",
                "opaque-id": "SM00431",
                "description": "Leaking information about an exception, such as messages and stack traces, to an\n              external user can expose implementation details that are useful to an attacker for\n              developing a subsequent exploit.",
                "id": "cs/information-exposure-through-exception",
                "microsoft.alternative_tool_ID": "FXCOP.CA3004",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10027",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-209/ExceptionInformationExposure.ql",
                "microsoft.severity": "Low",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00424",
              "name": "cs/web/missing-global-error-handler",
              "shortDescription": {
                "text": "Missing global error handler"
              },
              "fullDescription": {
                "text": "ASP.NET applications should not set the 'customError' mode to \"off\" without providing a global error handler, otherwise they may leak exception information."
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-12",
  "external/cwe/cwe-248"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "problem",
                "precision": "high",
                "name": "Missing global error handler",
                "opaque-id": "SM00424",
                "description": "ASP.NET applications should not set the 'customError' mode to \"off\" without providing\n              a global error handler, otherwise they may leak exception information.",
                "id": "cs/web/missing-global-error-handler",
                "microsoft.alternative_tool_ID": "FXCOP.CA3114",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10200",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-248/MissingASPNETGlobalErrorHandler.ql",
                "microsoft.severity": "Important",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00480",
              "name": "cs/empty-password-in-configuration",
              "shortDescription": {
                "text": "Empty password in configuration file"
              },
              "fullDescription": {
                "text": "Finds empty passwords in configuration files."
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-258",
  "external/cwe/cwe-862"
],
                "suites": "sdl-recommended",
                "kind": "problem",
                "precision": "medium",
                "name": "Empty password in configuration file",
                "opaque-id": "SM00480",
                "description": "Finds empty passwords in configuration files.",
                "id": "cs/empty-password-in-configuration",
                "microsoft.requirement": "Microsoft.Security.AccessControl.20022",
                "query-path": "/semmlecode-csharp-queries/Configuration/EmptyPasswordInConfigurationFile.ql",
                "microsoft.severity": "Critical",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00401",
              "name": "cs/web/broad-cookie-path",
              "shortDescription": {
                "text": "Cookie security: overly broad path"
              },
              "fullDescription": {
                "text": "Finds cookies with an overly broad path."
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-287"
],
                "suites": "sdl-recommended",
                "kind": "problem",
                "precision": "high",
                "name": "Cookie security: overly broad path",
                "opaque-id": "SM00401",
                "description": "Finds cookies with an overly broad path.",
                "id": "cs/web/broad-cookie-path",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10204",
                "query-path": "/semmlecode-csharp-queries/Security Features/CookieWithOverlyBroadPath.ql",
                "microsoft.severity": "Important",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00397",
              "name": "cs/web/broad-cookie-domain",
              "shortDescription": {
                "text": "Cookie security: overly broad domain"
              },
              "fullDescription": {
                "text": "Finds cookies with an overly broad domain."
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-287"
],
                "suites": "sdl-recommended",
                "kind": "problem",
                "precision": "high",
                "name": "Cookie security: overly broad domain",
                "opaque-id": "SM00397",
                "description": "Finds cookies with an overly broad domain.",
                "id": "cs/web/broad-cookie-domain",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10204",
                "query-path": "/semmlecode-csharp-queries/Security Features/CookieWithOverlyBroadDomain.ql",
                "microsoft.severity": "Important",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00412",
              "name": "cs/cleartext-storage-of-sensitive-information",
              "shortDescription": {
                "text": "Clear text storage of sensitive information"
              },
              "fullDescription": {
                "text": "Sensitive information stored without encryption or hashing can expose it to an attacker."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-312",
  "external/cwe/cwe-315",
  "external/cwe/cwe-359"
],
                "suites": "sdl-recommended",
                "kind": "path-problem",
                "precision": "high",
                "name": "Clear text storage of sensitive information",
                "opaque-id": "SM00412",
                "description": "Sensitive information stored without encryption or hashing can expose it to an\n              attacker.",
                "id": "cs/cleartext-storage-of-sensitive-information",
                "microsoft.requirement": "Microsoft.Security.Cryptography.20004",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-312/CleartextStorage.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00400",
              "name": "cs/weak-encryption",
              "shortDescription": {
                "text": "Weak encryption"
              },
              "fullDescription": {
                "text": "Finds uses of encryption algorithms that are weak and obsolete"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-327"
],
                "suites": "sdl-recommended",
                "kind": "problem",
                "precision": "high",
                "name": "Weak encryption",
                "opaque-id": "SM00400",
                "description": "Finds uses of encryption algorithms that are weak and obsolete",
                "id": "cs/weak-encryption",
                "microsoft.requirement": "Microsoft.Security.Cryptography.10001",
                "query-path": "/semmlecode-csharp-queries/Security Features/WeakEncryption.ql",
                "microsoft.severity": "Important",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00396",
              "name": "cs/inadequate-rsa-padding",
              "shortDescription": {
                "text": "Weak encryption: inadequate RSA padding"
              },
              "fullDescription": {
                "text": "Finds uses of RSA encryption with inadequate padding."
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-327",
  "external/cwe/cwe-780"
],
                "suites": "sdl-recommended",
                "kind": "problem",
                "precision": "high",
                "name": "Weak encryption: inadequate RSA padding",
                "opaque-id": "SM00396",
                "description": "Finds uses of RSA encryption with inadequate padding.",
                "id": "cs/inadequate-rsa-padding",
                "microsoft.requirement": "Microsoft.Security.Cryptography.10012",
                "query-path": "/semmlecode-csharp-queries/Security Features/InadequateRSAPadding.ql",
                "microsoft.severity": "Important",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00399",
              "name": "cs/insufficient-key-size",
              "shortDescription": {
                "text": "Weak encryption: Insufficient key size"
              },
              "fullDescription": {
                "text": "Finds uses of encryption algorithms with too small a key size"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-327"
],
                "suites": "sdl-recommended",
                "kind": "problem",
                "precision": "high",
                "name": "Weak encryption: Insufficient key size",
                "opaque-id": "SM00399",
                "description": "Finds uses of encryption algorithms with too small a key size",
                "id": "cs/insufficient-key-size",
                "microsoft.requirement": "Microsoft.Security.Cryptography.10001",
                "query-path": "/semmlecode-csharp-queries/Security Features/InsufficientKeySize.ql",
                "microsoft.severity": "Important",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00395",
              "name": "cs/ecb-encryption",
              "shortDescription": {
                "text": "Encryption using ECB"
              },
              "fullDescription": {
                "text": "Highlights uses of the encryption mode 'CipherMode.ECB'. This mode should normally not be used because it is vulnerable to replay attacks."
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-327"
],
                "suites": "sdl-recommended",
                "kind": "problem",
                "precision": "high",
                "name": "Encryption using ECB",
                "opaque-id": "SM00395",
                "description": "Highlights uses of the encryption mode 'CipherMode.ECB'. This mode should normally not be used because it is vulnerable to replay attacks.",
                "id": "cs/ecb-encryption",
                "microsoft.requirement": "Microsoft.Security.Cryptography.10002",
                "query-path": "/semmlecode-csharp-queries/Security Features/Encryption using ECB.ql",
                "microsoft.severity": "Important",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00398",
              "name": "cs/insecure-randomness",
              "shortDescription": {
                "text": "Insecure randomness"
              },
              "fullDescription": {
                "text": "Using a cryptographically weak pseudo-random number generator to generate a security sensitive value may allow an attacker to predict what sensitive value will be generated."
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-338"
],
                "suites": "sdl-recommended",
                "kind": "path-problem",
                "precision": "high",
                "name": "Insecure randomness",
                "opaque-id": "SM00398",
                "description": "Using a cryptographically weak pseudo-random number generator to generate a\n              security sensitive value may allow an attacker to predict what sensitive value will\n              be generated.",
                "id": "cs/insecure-randomness",
                "microsoft.requirement": "Microsoft.Security.Cryptography.10017",
                "query-path": "/semmlecode-csharp-queries/Security Features/InsecureRandomness.ql",
                "microsoft.severity": "Important",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00433",
              "name": "cs/web/missing-token-validation",
              "shortDescription": {
                "text": "Missing cross-site request forgery token validation"
              },
              "fullDescription": {
                "text": "Handling a POST request without verifying that the request came from the user allows a malicious attacker to submit a request on behalf of the user."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-352"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "problem",
                "precision": "high",
                "name": "Missing cross-site request forgery token validation",
                "opaque-id": "SM00433",
                "description": "Handling a POST request without verifying that the request came from the user\n              allows a malicious attacker to submit a request on behalf of the user.",
                "id": "cs/web/missing-token-validation",
                "microsoft.alternative_tool_ID": "FXCOP.CA3147",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10204",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-352/MissingAntiForgeryTokenValidation.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00410",
              "name": "cs/exposure-of-sensitive-information",
              "shortDescription": {
                "text": "Exposure of private information"
              },
              "fullDescription": {
                "text": "If private information is written to an external location, it may be accessible by unauthorized persons."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-359"
],
                "suites": "sdl-recommended",
                "kind": "path-problem",
                "precision": "high",
                "name": "Exposure of private information",
                "opaque-id": "SM00410",
                "description": "If private information is written to an external location, it may be accessible by\n              unauthorized persons.",
                "id": "cs/exposure-of-sensitive-information",
                "microsoft.alternative_tool_ID": "FXCOP.CA3004",
                "microsoft.requirement": "Microsoft.Security.Cryptography.20004",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-359/ExposureOfPrivateInformation.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00251",
              "name": "cs/unsynchronized-static-access",
              "shortDescription": {
                "text": "Unsynchronized access to static collection member in non-static context"
              },
              "fullDescription": {
                "text": "If an unsynchronized access to a static collection member occurs during an addition or resizing operation, an infinite loop can occur."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "concurrency",
  "external/cwe/cwe-362",
  "external/cwe/cwe-567"
],
                "suites": "sdl-recommended",
                "kind": "problem",
                "precision": "medium",
                "name": "Unsynchronized access to static collection member in non-static context",
                "opaque-id": "SM00251",
                "description": "If an unsynchronized access to a static collection member occurs\n              during an addition or resizing operation, an infinite loop can occur.",
                "id": "cs/unsynchronized-static-access",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Concurrency/UnsynchronizedStaticAccess.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00409",
              "name": "cs/session-reuse",
              "shortDescription": {
                "text": "Failure to abandon session"
              },
              "fullDescription": {
                "text": "Reusing an existing session as a different user could allow an attacker to access someone else's account by using their session."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-384"
],
                "suites": "sdl-recommended",
                "kind": "problem",
                "precision": "high",
                "name": "Failure to abandon session",
                "opaque-id": "SM00409",
                "description": "Reusing an existing session as a different user could allow\n              an attacker to access someone else's account by using\n              their session.",
                "id": "cs/session-reuse",
                "microsoft.requirement": "Microsoft.Security.AccessControl.10034",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-384/AbandonSession.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00415",
              "name": "cs/web/missing-x-frame-options",
              "shortDescription": {
                "text": "Missing X-Frame-Options HTTP header"
              },
              "fullDescription": {
                "text": "If the 'X-Frame-Options' setting is not provided, a malicious user may be able to overlay their own UI on top of the site by using an iframe."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-451",
  "external/cwe/cwe-829"
],
                "suites": "sdl-recommended",
                "kind": "problem",
                "precision": "high",
                "name": "Missing X-Frame-Options HTTP header",
                "opaque-id": "SM00415",
                "description": "If the 'X-Frame-Options' setting is not provided, a malicious user may be able to\n              overlay their own UI on top of the site by using an iframe.",
                "id": "cs/web/missing-x-frame-options",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10204",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-451/MissingXFrameOptions.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00394",
              "name": "cs/web/persistent-cookie",
              "shortDescription": {
                "text": "Cookie security: persistent cookie"
              },
              "fullDescription": {
                "text": "Persistent cookies are vulnerable to attacks."
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-539"
],
                "suites": "sdl-recommended",
                "kind": "problem",
                "precision": "high",
                "name": "Cookie security: persistent cookie",
                "opaque-id": "SM00394",
                "description": "Persistent cookies are vulnerable to attacks.",
                "id": "cs/web/persistent-cookie",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10009",
                "query-path": "/semmlecode-csharp-queries/Security Features/PersistentCookie.ql",
                "microsoft.severity": "Moderate",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00432",
              "name": "cs/web/directory-browse-enabled",
              "shortDescription": {
                "text": "ASP.NET config file enables directory browsing"
              },
              "fullDescription": {
                "text": "Directory browsing should not be enabled in production as it can leak sensitive information."
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-548"
],
                "suites": "sdl-recommended",
                "kind": "problem",
                "precision": "very-high",
                "name": "ASP.NET config file enables directory browsing",
                "opaque-id": "SM00432",
                "description": "Directory browsing should not be enabled in production as it can leak sensitive information.",
                "id": "cs/web/directory-browse-enabled",
                "microsoft.requirement": "Microsoft.Security.AccessControl.10011",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-548/ASPNetDirectoryListing.ql",
                "microsoft.severity": "Moderate",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00405",
              "name": "cs/web/unvalidated-url-redirection",
              "shortDescription": {
                "text": "URL redirection from remote source"
              },
              "fullDescription": {
                "text": "URL redirection based on unvalidated user input may cause redirection to malicious web sites."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-601"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "path-problem",
                "precision": "high",
                "name": "URL redirection from remote source",
                "opaque-id": "SM00405",
                "description": "URL redirection based on unvalidated user input\n              may cause redirection to malicious web sites.",
                "id": "cs/web/unvalidated-url-redirection",
                "microsoft.alternative_tool_ID": "FXCOP.CA3007",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10204",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-601/UrlRedirect.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00421",
              "name": "cs/xml/insecure-dtd-handling",
              "shortDescription": {
                "text": "Untrusted XML is read insecurely"
              },
              "fullDescription": {
                "text": "Untrusted XML is read with an insecure resolver and DTD processing enabled."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-611",
  "external/cwe/cwe-827",
  "external/cwe/cwe-776"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "path-problem",
                "precision": "high",
                "name": "Untrusted XML is read insecurely",
                "opaque-id": "SM00421",
                "description": "Untrusted XML is read with an insecure resolver and DTD processing enabled.",
                "id": "cs/xml/insecure-dtd-handling",
                "microsoft.alternative_tool_ID": "FXCOP.CA3052 FXCOP.CA3054 FXCOP.CA3055 FXCOP.CA3056 FXCOP.CA3058",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10027",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-611/UntrustedDataInsecureXml.ql",
                "microsoft.severity": "Low",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00434",
              "name": "cs/web/requiressl-not-set",
              "shortDescription": {
                "text": "'requireSSL' attribute is not set to true"
              },
              "fullDescription": {
                "text": "Omitting the 'requireSSL' attribute allows data to be transmitted insecurely using HTTP. Always set 'requireSSL' to 'true' to ensure that HTTPS is used at all times."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-319",
  "external/cwe/cwe-614"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "problem",
                "precision": "high",
                "name": "'requireSSL' attribute is not set to true",
                "opaque-id": "SM00434",
                "description": "Omitting the 'requireSSL' attribute allows data to be transmitted insecurely\n              using HTTP. Always set 'requireSSL' to 'true' to ensure that HTTPS\n              is used at all times.",
                "id": "cs/web/requiressl-not-set",
                "microsoft.alternative_tool_ID": "FXCOP.CA3103 FXCOP.CA3119",
                "microsoft.requirement": "Microsoft.Security.Cryptography.10031",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-614/RequireSSL.ql",
                "microsoft.severity": "Critical",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00428",
              "name": "cs/redos",
              "shortDescription": {
                "text": "Denial of Service from comparison of user input against expensive regex"
              },
              "fullDescription": {
                "text": "User input should not be matched against a regular expression that could require exponential time on certain input."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-730",
  "external/cwe/cwe-400"
],
                "suites": "sdl-recommended",
                "kind": "path-problem",
                "precision": "high",
                "name": "Denial of Service from comparison of user input against expensive regex",
                "opaque-id": "SM00428",
                "description": "User input should not be matched against a regular expression that could require\n              exponential time on certain input.",
                "id": "cs/redos",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10200",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-730/ReDoS.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00427",
              "name": "cs/regex-injection",
              "shortDescription": {
                "text": "Regular expression injection"
              },
              "fullDescription": {
                "text": "User input should not be used in regular expressions without first being escaped, otherwise a malicious user may be able to provide a regex that could require exponential time on certain inputs."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-730",
  "external/cwe/cwe-400"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "path-problem",
                "precision": "high",
                "name": "Regular expression injection",
                "opaque-id": "SM00427",
                "description": "User input should not be used in regular expressions without first being escaped,\n              otherwise a malicious user may be able to provide a regex that could require\n              exponential time on certain inputs.",
                "id": "cs/regex-injection",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10027",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-730/RegexInjection.ql",
                "microsoft.severity": "Low",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00423",
              "name": "cs/hardcoded-credentials",
              "shortDescription": {
                "text": "Hard-coded credentials"
              },
              "fullDescription": {
                "text": "Credentials are hard coded in the source code of the application."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-259",
  "external/cwe/cwe-321",
  "external/cwe/cwe-798"
],
                "suites": "sdl-recommended",
                "kind": "path-problem",
                "precision": "high",
                "name": "Hard-coded credentials",
                "opaque-id": "SM00423",
                "description": "Credentials are hard coded in the source code of the application.",
                "id": "cs/hardcoded-credentials",
                "microsoft.requirement": "Microsoft.Security.AccessControl.20022",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-798/HardcodedCredentials.ql",
                "microsoft.severity": "Critical",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00422",
              "name": "cs/hardcoded-connection-string-credentials",
              "shortDescription": {
                "text": "Hard-coded connection string with credentials"
              },
              "fullDescription": {
                "text": "Credentials are hard-coded in a connection string in the source code of the application."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-259",
  "external/cwe/cwe-321",
  "external/cwe/cwe-798"
],
                "suites": "sdl-recommended\n         sdl-required",
                "kind": "path-problem",
                "precision": "high",
                "name": "Hard-coded connection string with credentials",
                "opaque-id": "SM00422",
                "description": "Credentials are hard-coded in a connection string in the source code of the application.",
                "id": "cs/hardcoded-connection-string-credentials",
                "microsoft.requirement": "Microsoft.Security.AccessControl.20022",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-798/HardcodedConnectionString.ql",
                "microsoft.severity": "Critical",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00413",
              "name": "cs/user-controlled-bypass",
              "shortDescription": {
                "text": "User-controlled bypass of sensitive method"
              },
              "fullDescription": {
                "text": "User-controlled bypassing of sensitive methods may allow attackers to avoid passing through authentication systems."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-807",
  "external/cwe/cwe-247",
  "external/cwe/cwe-350"
],
                "suites": "sdl-recommended",
                "kind": "path-problem",
                "precision": "high",
                "name": "User-controlled bypass of sensitive method",
                "opaque-id": "SM00413",
                "description": "User-controlled bypassing of sensitive methods may allow attackers to avoid\n              passing through authentication systems.",
                "id": "cs/user-controlled-bypass",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-807/ConditionalBypass.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00411",
              "name": "cs/inappropriate-encoding",
              "shortDescription": {
                "text": "Inappropriate encoding"
              },
              "fullDescription": {
                "text": "Using an inappropriate encoding may give unintended results and may pose a security risk."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "security",
  "external/cwe/cwe-838"
],
                "suites": "sdl-recommended",
                "kind": "path-problem",
                "precision": "low",
                "name": "Inappropriate encoding",
                "opaque-id": "SM00411",
                "description": "Using an inappropriate encoding may give unintended results and may\n              pose a security risk.",
                "id": "cs/inappropriate-encoding",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10204",
                "query-path": "/semmlecode-csharp-queries/Security Features/CWE-838/InappropriateEncoding.ql",
                "microsoft.severity": "Important",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00357",
              "name": "cs/magic-number",
              "shortDescription": {
                "text": "Magic numbers"
              },
              "fullDescription": {
                "text": "'Magic constants' should be avoided: if a nontrivial constant is used repeatedly, it should be encapsulated into a const variable or macro definition."
              },
              "properties": {
                "tags": [
  "changeability",
  "maintainability"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "low",
                "name": "Magic numbers",
                "opaque-id": "SM00357",
                "description": "'Magic constants' should be avoided: if a nontrivial constant is used repeatedly, it should be encapsulated into a const variable or macro definition.",
                "id": "cs/magic-number",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/Magic Constants/MagicConstantsNumbers.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00358",
              "name": "cs/magic-string",
              "shortDescription": {
                "text": "Magic strings"
              },
              "fullDescription": {
                "text": "'Magic constants' should be avoided: if a nontrivial constant is used repeatedly, it should be encapsulated into a const variable or macro definition."
              },
              "properties": {
                "tags": [
  "changeability",
  "maintainability"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "low",
                "name": "Magic strings",
                "opaque-id": "SM00358",
                "description": "'Magic constants' should be avoided: if a nontrivial constant is used repeatedly, it should be encapsulated into a const variable or macro definition.",
                "id": "cs/magic-string",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/Magic Constants/MagicConstantsString.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00356",
              "name": "cs/use-number-constant",
              "shortDescription": {
                "text": "Magic numbers: use defined constant"
              },
              "fullDescription": {
                "text": "A numeric literal that matches the initializer of a final variable was found. Consider using the final variable instead of the numeric literal."
              },
              "properties": {
                "tags": [
  "changeability",
  "maintainability"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "low",
                "name": "Magic numbers: use defined constant",
                "opaque-id": "SM00356",
                "description": "A numeric literal that matches the initializer of a final variable was found. Consider using the final variable instead of the numeric literal.",
                "id": "cs/use-number-constant",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/Magic Constants/MagicNumbersUseConstant.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00355",
              "name": "cs/use-string-constant",
              "shortDescription": {
                "text": "Magic strings: use defined constant"
              },
              "fullDescription": {
                "text": "A string literal that matches the initializer of a final variable was found. Consider using the final variable instead of the string literal."
              },
              "properties": {
                "tags": [
  "changeability",
  "maintainability"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "low",
                "name": "Magic strings: use defined constant",
                "opaque-id": "SM00355",
                "description": "A string literal that matches the initializer of a final variable was found. Consider using the final variable instead of the string literal.",
                "id": "cs/use-string-constant",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/Magic Constants/MagicStringsUseConstant.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00369",
              "name": "cs/cast-from-abstract-to-concrete-collection",
              "shortDescription": {
                "text": "Cast from abstract to concrete collection"
              },
              "fullDescription": {
                "text": "A cast from an abstract collection to a concrete implementation type makes the code brittle; it is best to program against the abstract collection interface only."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability",
  "modularity",
  "external/cwe/cwe-485"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Cast from abstract to concrete collection",
                "opaque-id": "SM00369",
                "description": "A cast from an abstract collection to a concrete implementation type\n              makes the code brittle; it is best to program against the abstract\n              collection interface only.",
                "id": "cs/cast-from-abstract-to-concrete-collection",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/Implementation Hiding/AbstractToConcreteCollection.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00368",
              "name": "cs/static-array",
              "shortDescription": {
                "text": "Array constant vulnerable to change"
              },
              "fullDescription": {
                "text": "Array constants are mutable and can be changed by malicious code or by accident."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability",
  "modularity",
  "external/cwe/cwe-582"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Array constant vulnerable to change",
                "opaque-id": "SM00368",
                "description": "Array constants are mutable and can be changed by malicious code or by accident.",
                "id": "cs/static-array",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/Implementation Hiding/StaticArray.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00374",
              "name": "cs/constants-only-interface",
              "shortDescription": {
                "text": "Abstract class only declares common constants"
              },
              "fullDescription": {
                "text": "Constants should be placed in a class where they belong logically, rather than in an abstract class containing just constants."
              },
              "properties": {
                "tags": [
  "maintainability",
  "modularity"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Abstract class only declares common constants",
                "opaque-id": "SM00374",
                "description": "Constants should be placed in a class where they belong logically, rather than in an\n              abstract class containing just constants.",
                "id": "cs/constants-only-interface",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/Declarations/NoConstantsOnly.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00291",
              "name": "cs/static-field-written-by-instance",
              "shortDescription": {
                "text": "Static field written by instance method"
              },
              "fullDescription": {
                "text": "Finds instance methods that write static fields. This is tricky to get right if multiple instances are being manipulated, and generally bad practice."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability",
  "modularity"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Static field written by instance method",
                "opaque-id": "SM00291",
                "description": "Finds instance methods that write static fields.\n              This is tricky to get right if multiple instances are being manipulated,\n              and generally bad practice.",
                "id": "cs/static-field-written-by-instance",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/StaticFieldWrittenByInstance.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00371",
              "name": "cs/empty-interface",
              "shortDescription": {
                "text": "Empty interface"
              },
              "fullDescription": {
                "text": "Empty interfaces (those that do not declare any members) are often used as \"markers\" to associate metadata with a class, but custom attributes are a better alternative."
              },
              "properties": {
                "tags": [
  "maintainability",
  "modularity"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "low",
                "name": "Empty interface",
                "opaque-id": "SM00371",
                "description": "Empty interfaces (those that do not declare any members) are often used as \"markers\" to\n              associate metadata with a class, but custom attributes are a better alternative.",
                "id": "cs/empty-interface",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/Declarations/EmptyInterface.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00353",
              "name": "cs/commented-out-code",
              "shortDescription": {
                "text": "Commented-out code"
              },
              "fullDescription": {
                "text": "Comments that contain commented-out code should be avoided."
              },
              "properties": {
                "tags": [
  "maintainability",
  "statistical",
  "non-attributable"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Commented-out code",
                "opaque-id": "SM00353",
                "description": "Comments that contain commented-out code should be avoided.",
                "id": "cs/commented-out-code",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/Comments/CommentedOutCode.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00354",
              "name": "cs/todo-comment",
              "shortDescription": {
                "text": "TODO comment"
              },
              "fullDescription": {
                "text": "A comment that contains 'TODO' or similar keywords may indicate code that is incomplete or broken, or it may highlight an ambiguity in the software's specification."
              },
              "properties": {
                "tags": [
  "maintainability",
  "external/cwe/cwe-546"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "TODO comment",
                "opaque-id": "SM00354",
                "description": "A comment that contains 'TODO' or similar keywords may indicate code that is incomplete or\n              broken, or it may highlight an ambiguity in the software's specification.",
                "id": "cs/todo-comment",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/Comments/TodoComments.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00245",
              "name": "cs/lock-this",
              "shortDescription": {
                "text": "Locking the 'this' object in a lock statement"
              },
              "fullDescription": {
                "text": "It is bad practice to lock the 'this' object because it might be locked elsewhere."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability",
  "modularity",
  "external/cwe/cwe-662"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Locking the 'this' object in a lock statement",
                "opaque-id": "SM00245",
                "description": "It is bad practice to lock the 'this' object because\n              it might be locked elsewhere.",
                "id": "cs/lock-this",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Concurrency/LockThis.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00253",
              "name": "cs/complex-block",
              "shortDescription": {
                "text": "Block with too many statements"
              },
              "fullDescription": {
                "text": "Blocks with too many consecutive statements are candidates for refactoring. Only complex statements are counted here (eg. 'for', 'while', 'switch' ...). The top-level logic will be clearer if each complex statement is extracted to a function."
              },
              "properties": {
                "tags": [
  "maintainability",
  "testability",
  "complexity"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Block with too many statements",
                "opaque-id": "SM00253",
                "description": "Blocks with too many consecutive statements are candidates for refactoring. Only complex statements are counted here\n              (eg. 'for', 'while', 'switch' ...). The top-level logic will be clearer if each complex statement is extracted\n              to a function.",
                "id": "cs/complex-block",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Complexity/BlockWithTooManyStatements.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00345",
              "name": "cs/virtual-call-in-constructor",
              "shortDescription": {
                "text": "Virtual call in constructor or destructor"
              },
              "fullDescription": {
                "text": "Finds virtual calls or accesses in a constructor or destructor"
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability",
  "modularity"
],
                "suites": "best-practice",
                "alternate-ids": "cs/virtual-call-in-constructor-or-destructor",
                "kind": "problem",
                "precision": "medium",
                "name": "Virtual call in constructor or destructor",
                "opaque-id": "SM00345",
                "description": "Finds virtual calls or accesses in a constructor or destructor",
                "id": "cs/virtual-call-in-constructor",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/VirtualCallInConstructorOrDestructor.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00255",
              "name": "cs/method-feature-envy",
              "shortDescription": {
                "text": "Feature envy"
              },
              "fullDescription": {
                "text": "A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place."
              },
              "properties": {
                "tags": [
  "changeability",
  "maintainability",
  "modularity"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "low",
                "name": "Feature envy",
                "opaque-id": "SM00255",
                "description": "A method that uses more methods or variables from another (unrelated) class than\n              from its own class violates the principle of putting data and behavior in the same\n              place.",
                "id": "cs/method-feature-envy",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Architecture/Refactoring Opportunities/FeatureEnvy.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00254",
              "name": "cs/coupled-types",
              "shortDescription": {
                "text": "Inappropriate intimacy"
              },
              "fullDescription": {
                "text": "Two otherwise unrelated classes that share too much information about each other are difficult to maintain, change and understand."
              },
              "properties": {
                "tags": [
  "maintainability",
  "modularity"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Inappropriate intimacy",
                "opaque-id": "SM00254",
                "description": "Two otherwise unrelated classes that share too much information about each other are\n              difficult to maintain, change and understand.",
                "id": "cs/coupled-types",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Architecture/Refactoring Opportunities/InappropriateIntimacy.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00256",
              "name": "cs/mutually-dependent-types",
              "shortDescription": {
                "text": "Mutually-dependent types"
              },
              "fullDescription": {
                "text": "Mutual dependency between types makes code difficult to understand and test."
              },
              "properties": {
                "tags": [
  "testability",
  "maintainability",
  "modularity"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "low",
                "name": "Mutually-dependent types",
                "opaque-id": "SM00256",
                "description": "Mutual dependency between types makes code difficult to understand and test.",
                "id": "cs/mutually-dependent-types",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Architecture/Dependencies/MutualDependency.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00241",
              "name": "cs/unused-field",
              "shortDescription": {
                "text": "Unused field"
              },
              "fullDescription": {
                "text": "Finds private fields that seem to never be used, or solely used from dead methods"
              },
              "properties": {
                "tags": [
  "maintainability",
  "useless-code",
  "external/cwe/cwe-561"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "low",
                "name": "Unused field",
                "opaque-id": "SM00241",
                "description": "Finds private fields that seem to never be used, or solely used from dead methods",
                "id": "cs/unused-field",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Dead Code/UnusedField.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00242",
              "name": "cs/unused-method",
              "shortDescription": {
                "text": "Unused method"
              },
              "fullDescription": {
                "text": "Finds private methods that seem to never be used, or solely used from other dead methods"
              },
              "properties": {
                "tags": [
  "efficiency",
  "maintainability",
  "useless-code",
  "external/cwe/cwe-561"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "low",
                "name": "Unused method",
                "opaque-id": "SM00242",
                "description": "Finds private methods that seem to never be used, or solely used from other dead methods",
                "id": "cs/unused-method",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Dead Code/UnusedMethod.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00244",
              "name": "cs/unused-reftype",
              "shortDescription": {
                "text": "Dead reference types"
              },
              "fullDescription": {
                "text": "Finds non-public reference types (classes, interfaces) that are not accessed anywhere in the codebase."
              },
              "properties": {
                "tags": [
  "maintainability",
  "useless-code",
  "external/cwe/cwe-561"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "low",
                "name": "Dead reference types",
                "opaque-id": "SM00244",
                "description": "Finds non-public reference types (classes, interfaces) that are not accessed anywhere in the codebase.",
                "id": "cs/unused-reftype",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Dead Code/DeadRefTypes.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00243",
              "name": "cs/unassigned-field",
              "shortDescription": {
                "text": "Field is never assigned a non-default value"
              },
              "fullDescription": {
                "text": "Fields are automatically initialised with the default values for their type, which may not be the intent: prefer explicit initialisation."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability",
  "useless-code",
  "external/cwe/cwe-457"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "low",
                "name": "Field is never assigned a non-default value",
                "opaque-id": "SM00243",
                "description": "Fields are automatically initialised with the default values for their type, which may not be the intent: prefer explicit initialisation.",
                "id": "cs/unassigned-field",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Dead Code/NonAssignedFields.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00307",
              "name": "cs/duplicate-method",
              "shortDescription": {
                "text": "Duplicate method"
              },
              "fullDescription": {
                "text": "There is another identical implementation of this method. Extract the code to a common superclass or delegate to improve sharing."
              },
              "properties": {
                "tags": [
  "testability",
  "maintainability",
  "useless-code",
  "duplicate-code",
  "statistical",
  "non-attributable"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Duplicate method",
                "opaque-id": "SM00307",
                "description": "There is another identical implementation of this method. Extract the code to a common superclass or delegate to improve sharing.",
                "id": "cs/duplicate-method",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/external/DuplicateMethod.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00308",
              "name": "cs/duplicate-class",
              "shortDescription": {
                "text": "Duplicate class"
              },
              "fullDescription": {
                "text": "More than 80% of the methods in this class are duplicated in another class. Create a common supertype to improve code sharing."
              },
              "properties": {
                "tags": [
  "testability",
  "maintainability",
  "useless-code",
  "duplicate-code",
  "statistical",
  "non-attributable"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Duplicate class",
                "opaque-id": "SM00308",
                "description": "More than 80% of the methods in this class are duplicated in another class. Create a common supertype to improve code sharing.",
                "id": "cs/duplicate-class",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/external/MostlyDuplicateClass.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00304",
              "name": "cs/duplicate-file",
              "shortDescription": {
                "text": "Mostly duplicate file"
              },
              "fullDescription": {
                "text": "There is another file that shares a lot of the code with this file. Merge the two files to improve maintainability."
              },
              "properties": {
                "tags": [
  "testability",
  "maintainability",
  "useless-code",
  "duplicate-code",
  "statistical",
  "non-attributable"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Mostly duplicate file",
                "opaque-id": "SM00304",
                "description": "There is another file that shares a lot of the code with this file. Merge the two files to improve maintainability.",
                "id": "cs/duplicate-file",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/external/MostlyDuplicateFile.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00306",
              "name": "cs/similar-file",
              "shortDescription": {
                "text": "Mostly similar file"
              },
              "fullDescription": {
                "text": "There is another file that shares a lot of the code with this file. Notice that names of variables and types may have been changed. Merge the two files to improve maintainability."
              },
              "properties": {
                "tags": [
  "testability",
  "maintainability",
  "useless-code",
  "duplicate-code",
  "statistical",
  "non-attributable"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Mostly similar file",
                "opaque-id": "SM00306",
                "description": "There is another file that shares a lot of the code with this file. Notice that names of variables and types may have been changed. Merge the two files to improve maintainability.",
                "id": "cs/similar-file",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/external/MostlySimilarFile.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00334",
              "name": "cs/useless-forwarding-method",
              "shortDescription": {
                "text": "Pointless forwarding method"
              },
              "fullDescription": {
                "text": "A method forwards calls to another method of the same name that is not called independently."
              },
              "properties": {
                "tags": [
  "maintainability",
  "useless-code"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Pointless forwarding method",
                "opaque-id": "SM00334",
                "description": "A method forwards calls to another method of the same name that is not called independently.",
                "id": "cs/useless-forwarding-method",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Useless code/PointlessForwardingMethod.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00332",
              "name": "cs/unused-label",
              "shortDescription": {
                "text": "Unused label"
              },
              "fullDescription": {
                "text": "An unused label serves no purpose and should be removed."
              },
              "properties": {
                "tags": [
  "maintainability",
  "useless-code"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Unused label",
                "opaque-id": "SM00332",
                "description": "An unused label serves no purpose and should be removed.",
                "id": "cs/unused-label",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Useless code/UnusedLabel.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00333",
              "name": "cs/useless-gethashcode-call",
              "shortDescription": {
                "text": "Useless call to GetHashCode()"
              },
              "fullDescription": {
                "text": "Calling 'GetHashCode()' on integer types is redundant because the method always returns the original value."
              },
              "properties": {
                "tags": [
  "readability",
  "useless-code"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Useless call to GetHashCode()",
                "opaque-id": "SM00333",
                "description": "Calling 'GetHashCode()' on integer types is redundant because the method always returns\n              the original value.",
                "id": "cs/useless-gethashcode-call",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Useless code/IntGetHashCode.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00377",
              "name": "cs/cast-of-this-to-type-parameter",
              "shortDescription": {
                "text": "Cast of 'this' to a type parameter"
              },
              "fullDescription": {
                "text": "Casting 'this' to a type parameter of the current type masks an implicit type constraint that should be explicitly stated."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability",
  "language-features"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Cast of 'this' to a type parameter",
                "opaque-id": "SM00377",
                "description": "Casting 'this' to a type parameter of the current type masks an implicit type constraint that should be explicitly stated.",
                "id": "cs/cast-of-this-to-type-parameter",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/CastThisToTypeParameter.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00384",
              "name": "cs/chained-type-tests",
              "shortDescription": {
                "text": "Chain of 'is' tests"
              },
              "fullDescription": {
                "text": "Long sequences of type tests on a variable are generally an indication of questionable design. They are hard to maintain and can cause performance problems."
              },
              "properties": {
                "tags": [
  "changeability",
  "maintainability",
  "language-features"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Chain of 'is' tests",
                "opaque-id": "SM00384",
                "description": "Long sequences of type tests on a variable are generally an indication of questionable design. They are hard to maintain\n              and can cause performance problems.",
                "id": "cs/chained-type-tests",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/ChainedIs.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00390",
              "name": "cs/downcast-of-this",
              "shortDescription": {
                "text": "Dubious downcast of 'this'"
              },
              "fullDescription": {
                "text": "Casting 'this' to a derived type introduces a dependency cycle between the type of 'this' and the target type."
              },
              "properties": {
                "tags": [
  "testability",
  "maintainability",
  "language-features"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Dubious downcast of 'this'",
                "opaque-id": "SM00390",
                "description": "Casting 'this' to a derived type introduces a dependency cycle between the type of 'this' and the target type.",
                "id": "cs/downcast-of-this",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/DubiousDowncastOfThis.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00380",
              "name": "cs/type-test-of-this",
              "shortDescription": {
                "text": "Dubious type test of 'this'"
              },
              "fullDescription": {
                "text": "Testing whether 'this' is an instance of a derived type introduces a dependency cycle between the type of 'this' and the target type."
              },
              "properties": {
                "tags": [
  "testability",
  "maintainability",
  "language-features"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Dubious type test of 'this'",
                "opaque-id": "SM00380",
                "description": "Testing whether 'this' is an instance of a derived type introduces a dependency cycle between the type of 'this' and the target type.",
                "id": "cs/type-test-of-this",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/DubiousTypeTestOfThis.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00383",
              "name": "cs/missed-readonly-modifier",
              "shortDescription": {
                "text": "Missed 'readonly' opportunity"
              },
              "fullDescription": {
                "text": "A private field where all assignments occur as part of the declaration or in a constructor in the same class can be 'readonly'."
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Missed 'readonly' opportunity",
                "opaque-id": "SM00383",
                "description": "A private field where all assignments occur as part of the declaration or\n              in a constructor in the same class can be 'readonly'.",
                "id": "cs/missed-readonly-modifier",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/MissedReadonlyOpportunity.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00388",
              "name": "cs/missed-ternary-operator",
              "shortDescription": {
                "text": "Missed ternary opportunity"
              },
              "fullDescription": {
                "text": "An 'if' statement where both branches either (a) return or (b) write to the same variable can often be expressed more clearly using the '?' operator."
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Missed ternary opportunity",
                "opaque-id": "SM00388",
                "description": "An 'if' statement where both branches either (a) return or (b) write to the same variable can often be expressed more clearly using the '?' operator.",
                "id": "cs/missed-ternary-operator",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/MissedTernaryOpportunity.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00391",
              "name": "cs/missed-using-statement",
              "shortDescription": {
                "text": "Missed 'using' opportunity"
              },
              "fullDescription": {
                "text": "C# provides a 'using' statement as a better alternative to manual resource disposal in a finally block - it makes sense to use it."
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Missed 'using' opportunity",
                "opaque-id": "SM00391",
                "description": "C# provides a 'using' statement as a better alternative to manual resource disposal in a finally block - it makes sense to use it.",
                "id": "cs/missed-using-statement",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/MissedUsingOpportunity.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00393",
              "name": "cs/useless-is-before-as",
              "shortDescription": {
                "text": "Useless 'is' before 'as'"
              },
              "fullDescription": {
                "text": "The C# 'as' operator performs a type test - there is no need to precede it with an 'is'."
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features",
  "external/cwe/cwe-561"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Useless 'is' before 'as'",
                "opaque-id": "SM00393",
                "description": "The C# 'as' operator performs a type test - there is no need to precede it with an 'is'.",
                "id": "cs/useless-is-before-as",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/UselessIsBeforeAs.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00379",
              "name": "cs/coalesce-of-identical-expressions",
              "shortDescription": {
                "text": "Useless ?? expression"
              },
              "fullDescription": {
                "text": "The null-coalescing operator is intended to help provide special handling for the case when a variable is null - its two operands should always do different things."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features",
  "external/cwe/cwe-561"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Useless ?? expression",
                "opaque-id": "SM00379",
                "description": "The null-coalescing operator is intended to help provide special handling for the case when a variable is null - its two operands should\n              always do different things.",
                "id": "cs/coalesce-of-identical-expressions",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/UselessNullCoalescingExpression.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00387",
              "name": "cs/useless-type-test",
              "shortDescription": {
                "text": "Useless type test"
              },
              "fullDescription": {
                "text": "There is no need to test whether or not an instance of a derived type is also an instance of a base type - it always is."
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features",
  "external/cwe/cwe-561"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Useless type test",
                "opaque-id": "SM00387",
                "description": "There is no need to test whether or not an instance of a derived type is also an instance of a base type - it always is.",
                "id": "cs/useless-type-test",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/UselessTypeTest.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00381",
              "name": "cs/useless-upcast",
              "shortDescription": {
                "text": "Useless upcast"
              },
              "fullDescription": {
                "text": "Casting an expression is normally not needed when there exists an implicit conversion."
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features",
  "external/cwe/cwe-561"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Useless upcast",
                "opaque-id": "SM00381",
                "description": "Casting an expression is normally not needed when there exists an implicit conversion.",
                "id": "cs/useless-upcast",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/UselessUpcast.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00389",
              "name": "cs/unused-property-value",
              "shortDescription": {
                "text": "Property value is not used when setting a property"
              },
              "fullDescription": {
                "text": "Ignoring the value assigned to a property is potentially confusing and can lead to unexpected results."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability",
  "language-features"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Property value is not used when setting a property",
                "opaque-id": "SM00389",
                "description": "Ignoring the value assigned to a property is potentially confusing and\n              can lead to unexpected results.",
                "id": "cs/unused-property-value",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/UnusedPropertyValue.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00386",
              "name": "cs/captured-foreach-variable",
              "shortDescription": {
                "text": "Capturing a foreach variable"
              },
              "fullDescription": {
                "text": "Code that captures a 'foreach' variable and uses it outside the loop behaves differently in C# version 4 and C# version 5"
              },
              "properties": {
                "tags": [
  "portability",
  "maintainability",
  "language-features",
  "external/cwe/cwe-758"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Capturing a foreach variable",
                "opaque-id": "SM00386",
                "description": "Code that captures a 'foreach' variable and uses it outside the loop behaves differently in C# version 4 and C# version 5",
                "id": "cs/captured-foreach-variable",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/ForeachCapture.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00378",
              "name": "cs/useless-cast-to-self",
              "shortDescription": {
                "text": "Cast to same type"
              },
              "fullDescription": {
                "text": "A cast to the same type as the original expression is always redundant."
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features",
  "external/cwe/cwe-561"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "medium",
                "name": "Cast to same type",
                "opaque-id": "SM00378",
                "description": "A cast to the same type as the original expression is always redundant.",
                "id": "cs/useless-cast-to-self",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/UselessCastToSelf.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00382",
              "name": "cs/nested-if-statements",
              "shortDescription": {
                "text": "Nested 'if' statements can be combined"
              },
              "fullDescription": {
                "text": "Nested 'if' statements can be simplified by combining them using '&&'."
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Nested 'if' statements can be combined",
                "opaque-id": "SM00382",
                "description": "Nested 'if' statements can be simplified by combining them using '&&'.",
                "id": "cs/nested-if-statements",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/NestedIf.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00385",
              "name": "cs/rethrown-exception-variable",
              "shortDescription": {
                "text": "Rethrowing exception variable"
              },
              "fullDescription": {
                "text": "Throwing the exception variable will lose the original stack information. This can make errors harder to diagnose."
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features",
  "exceptions"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "very-high",
                "name": "Rethrowing exception variable",
                "opaque-id": "SM00385",
                "description": "Throwing the exception variable will lose the original stack information.\n              This can make errors harder to diagnose.",
                "id": "cs/rethrown-exception-variable",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/RethrowException.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00392",
              "name": "cs/catch-of-all-exceptions",
              "shortDescription": {
                "text": "Generic catch clause"
              },
              "fullDescription": {
                "text": "Catching all exceptions with a generic catch clause may be overly broad, which can make errors harder to diagnose."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability",
  "external/cwe/cwe-396"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Generic catch clause",
                "opaque-id": "SM00392",
                "description": "Catching all exceptions with a generic catch clause may be overly\n              broad, which can make errors harder to diagnose.",
                "id": "cs/catch-of-all-exceptions",
                "microsoft.alternative_tool_ID": "FXCOP.CA2153",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/CatchOfGenericException.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM02592",
              "name": "cs/simplifiable-boolean-expression",
              "shortDescription": {
                "text": "Unnecessarily complex Boolean expression"
              },
              "fullDescription": {
                "text": "Boolean expressions that are unnecessarily complicated hinder readability."
              },
              "properties": {
                "tags": [
  "readability",
  "maintainability"
],
                "suites": "best-practice",
                "kind": "problem",
                "precision": "high",
                "name": "Unnecessarily complex Boolean expression",
                "opaque-id": "SM02592",
                "description": "Boolean expressions that are unnecessarily complicated hinder readability.",
                "id": "cs/simplifiable-boolean-expression",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Language Abuse/SimplifyBoolExpr.ql",
                "microsoft.severity": "Defense in Depth",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00343",
              "name": "cs/web/debug-code",
              "shortDescription": {
                "text": "ASP.NET: leftover debug code"
              },
              "fullDescription": {
                "text": "Finds leftover entry points in web applications"
              },
              "properties": {
                "tags": [
  "security",
  "maintainability",
  "frameworks/asp.net",
  "external/cwe/cwe-489"
],
                "kind": "problem",
                "precision": "low",
                "name": "ASP.NET: leftover debug code",
                "opaque-id": "SM00343",
                "description": "Finds leftover entry points in web applications",
                "id": "cs/web/debug-code",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/LeftoverDebugCode.ql",
                "microsoft.severity": "Important",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00339",
              "name": "cs/web/html-hidden-input",
              "shortDescription": {
                "text": "Use of HTMLInputHidden"
              },
              "fullDescription": {
                "text": "Finds uses of hidden fields on forms"
              },
              "properties": {
                "tags": [
  "security",
  "maintainability",
  "frameworks/asp.net",
  "external/cwe/cwe-472"
],
                "kind": "problem",
                "precision": "medium",
                "name": "Use of HTMLInputHidden",
                "opaque-id": "SM00339",
                "description": "Finds uses of hidden fields on forms",
                "id": "cs/web/html-hidden-input",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/UseOfHtmlInputHidden.ql",
                "microsoft.severity": "Important",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00331",
              "name": "cs/web/file-upload",
              "shortDescription": {
                "text": "Use of file upload"
              },
              "fullDescription": {
                "text": "Finds uses of file upload"
              },
              "properties": {
                "tags": [
  "security",
  "maintainability",
  "frameworks/asp.net",
  "external/cwe/cwe-434"
],
                "kind": "problem",
                "precision": "high",
                "name": "Use of file upload",
                "opaque-id": "SM00331",
                "description": "Finds uses of file upload",
                "id": "cs/web/file-upload",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/Input Validation/UseOfFileUpload.ql",
                "microsoft.severity": "Important",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00329",
              "name": "cs/web/ambiguous-client-variable",
              "shortDescription": {
                "text": "Value shadowing"
              },
              "fullDescription": {
                "text": "Finds ambiguous accesses to client variables"
              },
              "properties": {
                "tags": [
  "security",
  "maintainability",
  "frameworks/asp.net"
],
                "kind": "problem",
                "precision": "medium",
                "name": "Value shadowing",
                "opaque-id": "SM00329",
                "description": "Finds ambiguous accesses to client variables",
                "id": "cs/web/ambiguous-client-variable",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10204",
                "query-path": "/semmlecode-csharp-queries/Input Validation/ValueShadowing.ql",
                "microsoft.severity": "Important",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00330",
              "name": "cs/web/ambiguous-server-variable",
              "shortDescription": {
                "text": "Value shadowing: server variable"
              },
              "fullDescription": {
                "text": "Finds ambiguous accesses to server variables"
              },
              "properties": {
                "tags": [
  "security",
  "maintainability",
  "frameworks/asp.net"
],
                "kind": "problem",
                "precision": "medium",
                "name": "Value shadowing: server variable",
                "opaque-id": "SM00330",
                "description": "Finds ambiguous accesses to server variables",
                "id": "cs/web/ambiguous-server-variable",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10204",
                "query-path": "/semmlecode-csharp-queries/Input Validation/ValueShadowingServerVariable.ql",
                "microsoft.severity": "Important",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00336",
              "name": "cs/call-to-object-tostring",
              "shortDescription": {
                "text": "Use of default ToString()"
              },
              "fullDescription": {
                "text": "Calling the default implementation of 'ToString' returns a value that is unlikely to be what you expect."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "very-high",
                "name": "Use of default ToString()",
                "opaque-id": "SM00336",
                "description": "Calling the default implementation of 'ToString' returns a value\n              that is unlikely to be what you expect.",
                "id": "cs/call-to-object-tostring",
                "query-path": "/semmlecode-csharp-queries/Useless code/DefaultToString.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00335",
              "name": "cs/useless-tostring-call",
              "shortDescription": {
                "text": "Redundant ToString() call"
              },
              "fullDescription": {
                "text": "Explicit calls to `ToString()` can be removed when the call appears in a context where an implicit conversion exists."
              },
              "properties": {
                "tags": [
  "maintainability",
  "useless-code"
],
                "kind": "problem",
                "precision": "high",
                "name": "Redundant ToString() call",
                "opaque-id": "SM00335",
                "description": "Explicit calls to `ToString()` can be removed when the call\n              appears in a context where an implicit conversion exists.",
                "id": "cs/useless-tostring-call",
                "query-path": "/semmlecode-csharp-queries/Useless code/RedundantToStringCall.ql",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00455",
              "name": "cs/string-concatenation-in-loop",
              "shortDescription": {
                "text": "String concatenation in loop"
              },
              "fullDescription": {
                "text": "Finds code that performs string concatenation in a loop using the + operator."
              },
              "properties": {
                "tags": [
  "efficiency",
  "maintainability"
],
                "kind": "problem",
                "precision": "very-high",
                "name": "String concatenation in loop",
                "opaque-id": "SM00455",
                "description": "Finds code that performs string concatenation in a loop using the + operator.",
                "id": "cs/string-concatenation-in-loop",
                "query-path": "/semmlecode-csharp-queries/Performance/StringConcatenationInLoop.ql",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00454",
              "name": "cs/stringbuilder-creation-in-loop",
              "shortDescription": {
                "text": "StringBuilder creation in loop"
              },
              "fullDescription": {
                "text": "Creating a 'StringBuilder' in a loop is less efficient than reusing a single 'StringBuilder'."
              },
              "properties": {
                "tags": [
  "efficiency"
],
                "kind": "problem",
                "precision": "very-high",
                "name": "StringBuilder creation in loop",
                "opaque-id": "SM00454",
                "description": "Creating a 'StringBuilder' in a loop is less efficient than reusing a single 'StringBuilder'.",
                "id": "cs/stringbuilder-creation-in-loop",
                "query-path": "/semmlecode-csharp-queries/Performance/StringBuilderInLoop.ql",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00286",
              "name": "cs/stringbuilder-initialized-with-character",
              "shortDescription": {
                "text": "Character passed to StringBuilder constructor"
              },
              "fullDescription": {
                "text": "A character value is passed to the constructor of 'StringBuilder'. This value will be converted to an integer and interpreted as the buffer's initial capacity, which is probably not intended."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "maintainability"
],
                "kind": "problem",
                "precision": "high",
                "name": "Character passed to StringBuilder constructor",
                "opaque-id": "SM00286",
                "description": "A character value is passed to the constructor of 'StringBuilder'. This value will\n              be converted to an integer and interpreted as the buffer's initial capacity, which is probably not intended.",
                "id": "cs/stringbuilder-initialized-with-character",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/StringBuilderCharInit.ql",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00465",
              "name": "cs/invalid-format-string",
              "shortDescription": {
                "text": "Invalid format string"
              },
              "fullDescription": {
                "text": "Using a format string with an incorrect format causes a 'System.FormatException'."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "high",
                "name": "Invalid format string",
                "opaque-id": "SM00465",
                "description": "Using a format string with an incorrect format causes a 'System.FormatException'.",
                "id": "cs/invalid-format-string",
                "query-path": "/semmlecode-csharp-queries/API Abuse/FormatInvalid.ql",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00471",
              "name": "cs/format-argument-missing",
              "shortDescription": {
                "text": "Missing format argument"
              },
              "fullDescription": {
                "text": "Supplying too few arguments to a format string causes a 'System.FormatException'."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "high",
                "name": "Missing format argument",
                "opaque-id": "SM00471",
                "description": "Supplying too few arguments to a format string causes a 'System.FormatException'.",
                "id": "cs/format-argument-missing",
                "query-path": "/semmlecode-csharp-queries/API Abuse/FormatMissingArgument.ql",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00470",
              "name": "cs/format-argument-unused",
              "shortDescription": {
                "text": "Unused format argument"
              },
              "fullDescription": {
                "text": "Supplying more arguments than are required for a format string may indicate an error in the format string."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "high",
                "name": "Unused format argument",
                "opaque-id": "SM00470",
                "description": "Supplying more arguments than are required for a format string may indicate an error in the format string.",
                "id": "cs/format-argument-unused",
                "query-path": "/semmlecode-csharp-queries/API Abuse/FormatUnusedArgument.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00290",
              "name": "cs/gethashcode-is-not-defined",
              "shortDescription": {
                "text": "Hashed value without GetHashCode definition"
              },
              "fullDescription": {
                "text": "Finds uses of hashing on types that define 'Equals(...)' but not 'GetHashCode()'."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "high",
                "name": "Hashed value without GetHashCode definition",
                "opaque-id": "SM00290",
                "description": "Finds uses of hashing on types that define 'Equals(...)' but not 'GetHashCode()'.",
                "id": "cs/gethashcode-is-not-defined",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/HashedButNoHash.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00474",
              "name": "cs/wrong-compareto-signature",
              "shortDescription": {
                "text": "Potentially incorrect CompareTo(...) signature"
              },
              "fullDescription": {
                "text": "The declaring type of a method with signature 'CompareTo(T)' does not implement 'IComparable<T>'."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "medium",
                "name": "Potentially incorrect CompareTo(...) signature",
                "opaque-id": "SM00474",
                "description": "The declaring type of a method with signature 'CompareTo(T)' does not implement 'IComparable<T>'.",
                "id": "cs/wrong-compareto-signature",
                "query-path": "/semmlecode-csharp-queries/API Abuse/IncorrectCompareToSignature.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00479",
              "name": "cs/inconsistent-equals-and-gethashcode",
              "shortDescription": {
                "text": "Inconsistent Equals(object) and GetHashCode()"
              },
              "fullDescription": {
                "text": "If a class overrides only one of 'Equals(object)' and 'GetHashCode()', it may mean that 'Equals(object)' and 'GetHashCode()' are inconsistent."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability",
  "external/cwe/cwe-581"
],
                "kind": "problem",
                "precision": "medium",
                "name": "Inconsistent Equals(object) and GetHashCode()",
                "opaque-id": "SM00479",
                "description": "If a class overrides only one of 'Equals(object)' and 'GetHashCode()', it may mean that\n              'Equals(object)' and 'GetHashCode()' are inconsistent.",
                "id": "cs/inconsistent-equals-and-gethashcode",
                "query-path": "/semmlecode-csharp-queries/API Abuse/InconsistentEqualsGetHashCode.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00285",
              "name": "cs/equals-uses-as",
              "shortDescription": {
                "text": "Equals should not apply \"as\""
              },
              "fullDescription": {
                "text": "Implementations of 'Equals' should not use \"as\" to test the type of the argument, but rather call GetType(). This guards against the possibility that the argument type will be subclassed. Otherwise, it is likely that the Equals method will not be symmetric, violating its contract."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "medium",
                "name": "Equals should not apply \"as\"",
                "opaque-id": "SM00285",
                "description": "Implementations of 'Equals' should not use \"as\" to test the type of the argument, but rather call GetType(). This guards against the possibility that the argument type will be subclassed. Otherwise, it is likely that the Equals method will not be symmetric, violating its contract.",
                "id": "cs/equals-uses-as",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/EqualsUsesAs.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00293",
              "name": "cs/equals-uses-is",
              "shortDescription": {
                "text": "Equals should not apply \"is\""
              },
              "fullDescription": {
                "text": "Implementations of 'Equals' should not use \"is\" to test the type of the argument, but rather call GetType(). This guards against the possibility that the argument type will be subclassed. Otherwise, it is likely that the Equals method will not be symmetric, violating its contract."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "medium",
                "name": "Equals should not apply \"is\"",
                "opaque-id": "SM00293",
                "description": "Implementations of 'Equals' should not use \"is\" to test the type of the argument, but rather call GetType(). This guards against the possibility that the argument type will be subclassed. Otherwise, it is likely that the Equals method will not be symmetric, violating its contract.",
                "id": "cs/equals-uses-is",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/EqualsUsesIs.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00289",
              "name": "cs/inconsistent-compareto-and-equals",
              "shortDescription": {
                "text": "Inconsistent CompareTo and Equals"
              },
              "fullDescription": {
                "text": "If a class implements 'IComparable.CompareTo' but does not override 'Equals', the two can be inconsistent."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "medium",
                "name": "Inconsistent CompareTo and Equals",
                "opaque-id": "SM00289",
                "description": "If a class implements 'IComparable.CompareTo' but does not override 'Equals', the two can be inconsistent.",
                "id": "cs/inconsistent-compareto-and-equals",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/InconsistentCompareTo.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00292",
              "name": "cs/unchecked-cast-in-equals",
              "shortDescription": {
                "text": "Unchecked cast in Equals method"
              },
              "fullDescription": {
                "text": "The object passed as a parameter to 'Equals' is used in a cast without first checking its type, which can cause an unwanted 'InvalidCastException'."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "high",
                "name": "Unchecked cast in Equals method",
                "opaque-id": "SM00292",
                "description": "The object passed as a parameter to 'Equals' is used in a cast without first checking its type, which can cause an unwanted 'InvalidCastException'.",
                "id": "cs/unchecked-cast-in-equals",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/UncheckedCastInEquals.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00280",
              "name": "cs/recursive-equals-call",
              "shortDescription": {
                "text": "Recursive call to Equals(object)"
              },
              "fullDescription": {
                "text": "A call to 'Equals(object)' is recursive: often this is due to a mistake in invoking a definition of 'Equals(...)' with a different signature."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "high",
                "name": "Recursive call to Equals(object)",
                "opaque-id": "SM00280",
                "description": "A call to 'Equals(object)' is recursive: often this is due to a mistake in invoking a definition\n              of 'Equals(...)' with a different signature.",
                "id": "cs/recursive-equals-call",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/RecursiveEquals.ql",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00282",
              "name": "cs/recursive-operator-equals-call",
              "shortDescription": {
                "text": "Recursive call to operator=="
              },
              "fullDescription": {
                "text": "A call to 'operator==' is recursive: often this is due to a failed attempt to perform a reference equality comparison."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "medium",
                "name": "Recursive call to operator==",
                "opaque-id": "SM00282",
                "description": "A call to 'operator==' is recursive: often this is due to a failed attempt to perform a reference equality comparison.",
                "id": "cs/recursive-operator-equals-call",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/RecursiveOperatorEquals.ql",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00468",
              "name": "cs/wrong-equals-signature",
              "shortDescription": {
                "text": "Potentially incorrect Equals(...) signature"
              },
              "fullDescription": {
                "text": "The declaring type of a method with signature 'Equals(T)' does not implement 'Equals(object)'."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "medium",
                "name": "Potentially incorrect Equals(...) signature",
                "opaque-id": "SM00468",
                "description": "The declaring type of a method with signature 'Equals(T)' does not implement 'Equals(object)'.",
                "id": "cs/wrong-equals-signature",
                "query-path": "/semmlecode-csharp-queries/API Abuse/IncorrectEqualsSignature.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00472",
              "name": "cs/class-missing-equals",
              "shortDescription": {
                "text": "Class does not implement Equals(object)"
              },
              "fullDescription": {
                "text": "The class does not implement the 'Equals(object)' method, which can cause unexpected behavior. The default 'Equals(object)' method performs reference comparison, which may not be what was intended."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "medium",
                "name": "Class does not implement Equals(object)",
                "opaque-id": "SM00472",
                "description": "The class does not implement the 'Equals(object)' method, which can cause\n              unexpected behavior. The default 'Equals(object)' method performs reference\n              comparison, which may not be what was intended.",
                "id": "cs/class-missing-equals",
                "query-path": "/semmlecode-csharp-queries/API Abuse/ClassDoesNotImplementEquals.ql",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00466",
              "name": "cs/call-to-gc",
              "shortDescription": {
                "text": "Call to GC.Collect()"
              },
              "fullDescription": {
                "text": "Explicit requests for garbage collection often indicate performance problems and memory leaks."
              },
              "properties": {
                "tags": [
  "efficiency",
  "maintainability"
],
                "kind": "problem",
                "precision": "very-high",
                "name": "Call to GC.Collect()",
                "opaque-id": "SM00466",
                "description": "Explicit requests for garbage collection often indicate performance problems and memory leaks.",
                "id": "cs/call-to-gc",
                "query-path": "/semmlecode-csharp-queries/API Abuse/CallToGCCollect.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00464",
              "name": "cs/class-implements-icloneable",
              "shortDescription": {
                "text": "Class implements ICloneable"
              },
              "fullDescription": {
                "text": "Implementing 'ICloneable' is discouraged due to its imprecise semantics and its viral effect on your code base."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "very-high",
                "name": "Class implements ICloneable",
                "opaque-id": "SM00464",
                "description": "Implementing 'ICloneable' is discouraged due to its imprecise semantics\n              and its viral effect on your code base.",
                "id": "cs/class-implements-icloneable",
                "query-path": "/semmlecode-csharp-queries/API Abuse/ClassImplementsICloneable.ql",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00477",
              "name": "cs/member-not-disposed",
              "shortDescription": {
                "text": "Missing Dispose call"
              },
              "fullDescription": {
                "text": "Classes that implement 'IDisposable' and have members of 'IDisposable' type should dispose those members in their 'Dispose()' method."
              },
              "properties": {
                "tags": [
  "efficiency",
  "maintainability",
  "external/cwe/cwe-404",
  "external/cwe/cwe-459"
],
                "kind": "problem",
                "precision": "low",
                "name": "Missing Dispose call",
                "opaque-id": "SM00477",
                "description": "Classes that implement 'IDisposable' and have members of 'IDisposable' type\n              should dispose those members in their 'Dispose()' method.",
                "id": "cs/member-not-disposed",
                "query-path": "/semmlecode-csharp-queries/API Abuse/MissingDisposeCall.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00463",
              "name": "cs/missing-dispose-method",
              "shortDescription": {
                "text": "Missing Dispose method"
              },
              "fullDescription": {
                "text": "Classes that implement 'IDisposable' and have members of 'IDisposable' type should also declare/override 'Dispose()'."
              },
              "properties": {
                "tags": [
  "efficiency",
  "maintainability",
  "external/cwe/cwe-404",
  "external/cwe/cwe-459"
],
                "kind": "problem",
                "precision": "low",
                "name": "Missing Dispose method",
                "opaque-id": "SM00463",
                "description": "Classes that implement 'IDisposable' and have members of 'IDisposable' type\n              should also declare/override 'Dispose()'.",
                "id": "cs/missing-dispose-method",
                "query-path": "/semmlecode-csharp-queries/API Abuse/MissingDisposeMethod.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00475",
              "name": "cs/local-not-disposed",
              "shortDescription": {
                "text": "Missing Dispose call on local IDisposable"
              },
              "fullDescription": {
                "text": "Methods that create objects of type 'IDisposable' should call 'Dispose' on those objects, otherwise unmanaged resources may not be released."
              },
              "properties": {
                "tags": [
  "efficiency",
  "maintainability",
  "security",
  "external/cwe/cwe-404",
  "external/cwe/cwe-459",
  "external/cwe/cwe-460"
],
                "kind": "problem",
                "precision": "high",
                "name": "Missing Dispose call on local IDisposable",
                "opaque-id": "SM00475",
                "description": "Methods that create objects of type 'IDisposable' should call 'Dispose' on those\n              objects, otherwise unmanaged resources may not be released.",
                "id": "cs/local-not-disposed",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/API Abuse/NoDisposeCallOnLocalIDisposable.ql",
                "microsoft.severity": "Important",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00476",
              "name": "cs/dispose-not-called-on-throw",
              "shortDescription": {
                "text": "Dispose may not be called if an exception is thrown during execution"
              },
              "fullDescription": {
                "text": "Methods that create objects of type 'IDisposable' should call 'Dispose()' on those objects, even during exceptional circumstances, otherwise unmanaged resources may not be released."
              },
              "properties": {
                "tags": [
  "efficiency",
  "maintainability",
  "security",
  "external/cwe/cwe-404",
  "external/cwe/cwe-459",
  "external/cwe/cwe-460"
],
                "kind": "problem",
                "precision": "medium",
                "name": "Dispose may not be called if an exception is thrown during execution",
                "opaque-id": "SM00476",
                "description": "Methods that create objects of type 'IDisposable' should call 'Dispose()' on those\n              objects, even during exceptional circumstances, otherwise unmanaged resources may\n              not be released.",
                "id": "cs/dispose-not-called-on-throw",
                "microsoft.requirement": "Microsoft.Security.SystemsADM.10201",
                "query-path": "/semmlecode-csharp-queries/API Abuse/DisposeNotCalledOnException.ql",
                "microsoft.severity": "Important",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00338",
              "name": "cs/console-output",
              "shortDescription": {
                "text": "Poor logging: use of system output stream"
              },
              "fullDescription": {
                "text": "Finds uses of system output streams instead of proper logging"
              },
              "properties": {
                "tags": [
  "maintainability"
],
                "kind": "problem",
                "precision": "medium",
                "name": "Poor logging: use of system output stream",
                "opaque-id": "SM00338",
                "description": "Finds uses of system output streams instead of proper logging",
                "id": "cs/console-output",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/UseOfSystemOutputStream.ql",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00342",
              "name": "cs/unmanaged-code",
              "shortDescription": {
                "text": "Unmanaged code"
              },
              "fullDescription": {
                "text": "Finds \"extern\" methods, implemented by unmanaged code."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "high",
                "name": "Unmanaged code",
                "opaque-id": "SM00342",
                "description": "Finds \"extern\" methods, implemented by unmanaged code.",
                "id": "cs/unmanaged-code",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/UnmanagedCodeCheck.ql",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00340",
              "name": "cs/call-to-unmanaged-code",
              "shortDescription": {
                "text": "Calls to unmanaged code"
              },
              "fullDescription": {
                "text": "Finds calls to \"extern\" methods (which are implemented by unmanaged code)."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability"
],
                "kind": "problem",
                "precision": "high",
                "name": "Calls to unmanaged code",
                "opaque-id": "SM00340",
                "description": "Finds calls to \"extern\" methods (which are implemented by unmanaged code).",
                "id": "cs/call-to-unmanaged-code",
                "query-path": "/semmlecode-csharp-queries/Bad Practices/CallsUnmanagedCode.ql",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00295",
              "name": "cs/random-used-once",
              "shortDescription": {
                "text": "Random used only once"
              },
              "fullDescription": {
                "text": "Creating an instance of 'Random' for each pseudo-random number required does not guarantee an evenly distributed sequence of random numbers."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability",
  "external/cwe/cwe-335"
],
                "kind": "problem",
                "precision": "low",
                "name": "Random used only once",
                "opaque-id": "SM00295",
                "description": "Creating an instance of 'Random' for each pseudo-random number required does not\n              guarantee an evenly distributed sequence of random numbers.",
                "id": "cs/random-used-once",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/RandomUsedOnce.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00303",
              "name": "cs/unused-collection",
              "shortDescription": {
                "text": "Container contents are never accessed"
              },
              "fullDescription": {
                "text": "A collection or map whose contents are never queried or accessed is useless."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "maintainability",
  "useless-code",
  "external/cwe/cwe-561"
],
                "kind": "problem",
                "precision": "high",
                "name": "Container contents are never accessed",
                "opaque-id": "SM00303",
                "description": "A collection or map whose contents are never queried or accessed is useless.",
                "id": "cs/unused-collection",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/Collections/WriteOnlyContainer.ql",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00300",
              "name": "cs/empty-collection",
              "shortDescription": {
                "text": "Container contents are never initialized"
              },
              "fullDescription": {
                "text": "Querying the contents of a collection or map that is never initialized is not normally useful."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability",
  "useless-code",
  "external/cwe/cwe-561"
],
                "kind": "problem",
                "precision": "high",
                "name": "Container contents are never initialized",
                "opaque-id": "SM00300",
                "description": "Querying the contents of a collection or map that is never initialized is not normally useful.",
                "id": "cs/empty-collection",
                "query-path": "/semmlecode-csharp-queries/Likely Bugs/Collections/ReadOnlyContainer.ql",
                "problem.severity": "error"
              }
            },
            {
              "id": "SM00453",
              "name": "cs/inefficient-containskey",
              "shortDescription": {
                "text": "Inefficient use of ContainsKey"
              },
              "fullDescription": {
                "text": "Testing whether a dictionary contains a value before getting it is inefficient and redundant. Use 'TryGetValue' to combine these two steps."
              },
              "properties": {
                "kind": "problem",
                "precision": "high",
                "name": "Inefficient use of ContainsKey",
                "opaque-id": "SM00453",
                "description": "Testing whether a dictionary contains a value before getting it is inefficient and redundant.\n              Use 'TryGetValue' to combine these two steps.",
                "id": "cs/inefficient-containskey",
                "tag": "maintainability efficiency",
                "query-path": "/semmlecode-csharp-queries/Performance/UseTryGetValue.ql",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00473",
              "name": "cs/call-to-obsolete-method",
              "shortDescription": {
                "text": "Call to obsolete method"
              },
              "fullDescription": {
                "text": "Calls to methods marked as [Obsolete] should be replaced because the method is no longer maintained and may be removed in the future."
              },
              "properties": {
                "tags": [
  "changeability",
  "maintainability",
  "external/cwe/cwe-477"
],
                "kind": "problem",
                "precision": "very-high",
                "name": "Call to obsolete method",
                "opaque-id": "SM00473",
                "description": "Calls to methods marked as [Obsolete] should be replaced because the method is\n              no longer maintained and may be removed in the future.",
                "id": "cs/call-to-obsolete-method",
                "query-path": "/semmlecode-csharp-queries/API Abuse/CallToObsoleteMethod.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00456",
              "name": "cs/linq/inconsistent-enumeration",
              "shortDescription": {
                "text": "Bad multiple iteration"
              },
              "fullDescription": {
                "text": "Not every enumerable sequence is repeatable, so it is dangerous to write code that can consume elements of a sequence in more than one place."
              },
              "properties": {
                "tags": [
  "reliability",
  "maintainability",
  "language-features",
  "external/cwe/cwe-834"
],
                "kind": "problem",
                "precision": "medium",
                "name": "Bad multiple iteration",
                "opaque-id": "SM00456",
                "description": "Not every enumerable sequence is repeatable, so it is dangerous to write code that can consume elements of a sequence in more than one place.",
                "id": "cs/linq/inconsistent-enumeration",
                "query-path": "/semmlecode-csharp-queries/Linq/BadMultipleIteration.ql",
                "problem.severity": "warning"
              }
            },
            {
              "id": "SM00458",
              "name": "cs/linq/missed-all",
              "shortDescription": {
                "text": "Missed opportunity to use All"
              },
              "fullDescription": {
                "text": "The intent of a foreach loop that checks whether every element of its target sequence satisfies some predicate can be expressed more directly using LINQ's 'All' method."
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features"
],
                "kind": "problem",
                "precision": "high",
                "name": "Missed opportunity to use All",
                "opaque-id": "SM00458",
                "description": "The intent of a foreach loop that checks whether every element of its target sequence satisfies some predicate can be expressed\n              more directly using LINQ's 'All' method.",
                "id": "cs/linq/missed-all",
                "query-path": "/semmlecode-csharp-queries/Linq/MissedAllOpportunity.ql",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00459",
              "name": "cs/linq/missed-cast",
              "shortDescription": {
                "text": "Missed opportunity to use Cast"
              },
              "fullDescription": {
                "text": "The intent of a foreach loop that immediately casts its iteration variable to another type and then never uses the iteration variable again can often be better expressed using LINQ's 'Cast' method."
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features"
],
                "kind": "problem",
                "precision": "high",
                "name": "Missed opportunity to use Cast",
                "opaque-id": "SM00459",
                "description": "The intent of a foreach loop that immediately casts its iteration variable to another type and then\n              never uses the iteration variable again can often be better expressed using LINQ's 'Cast' method.",
                "id": "cs/linq/missed-cast",
                "query-path": "/semmlecode-csharp-queries/Linq/MissedCastOpportunity.ql",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00457",
              "name": "cs/linq/missed-oftype",
              "shortDescription": {
                "text": "Missed opportunity to use OfType"
              },
              "fullDescription": {
                "text": "The intent of a foreach loop that immediately uses 'as' to coerce its iteration variable to another type and then never uses the iteration variable again can often be better expressed using LINQ's 'OfType' method."
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features"
],
                "kind": "problem",
                "precision": "high",
                "name": "Missed opportunity to use OfType",
                "opaque-id": "SM00457",
                "description": "The intent of a foreach loop that immediately uses 'as' to coerce its iteration variable to another type and then\n              never uses the iteration variable again can often be better expressed using LINQ's 'OfType' method.",
                "id": "cs/linq/missed-oftype",
                "query-path": "/semmlecode-csharp-queries/Linq/MissedOfTypeOpportunity.ql",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00460",
              "name": "cs/linq/missed-select",
              "shortDescription": {
                "text": "Missed opportunity to use Select"
              },
              "fullDescription": {
                "text": "The intent of a foreach loop that immediately maps its iteration variable to another variable and then never uses the iteration variable again can often be better expressed using LINQ's 'Select' method."
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features"
],
                "kind": "problem",
                "precision": "high",
                "name": "Missed opportunity to use Select",
                "opaque-id": "SM00460",
                "description": "The intent of a foreach loop that immediately maps its iteration variable to another variable and then\n              never uses the iteration variable again can often be better expressed using LINQ's 'Select' method.",
                "id": "cs/linq/missed-select",
                "query-path": "/semmlecode-csharp-queries/Linq/MissedSelectOpportunity.ql",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00461",
              "name": "cs/linq/missed-where",
              "shortDescription": {
                "text": "Missed opportunity to use Where"
              },
              "fullDescription": {
                "text": "The intent of a foreach loop that implicitly filters its target sequence can often be better expressed using LINQ's 'Where' method."
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features"
],
                "kind": "problem",
                "precision": "high",
                "name": "Missed opportunity to use Where",
                "opaque-id": "SM00461",
                "description": "The intent of a foreach loop that implicitly filters its target sequence can often be better expressed using LINQ's 'Where' method.",
                "id": "cs/linq/missed-where",
                "query-path": "/semmlecode-csharp-queries/Linq/MissedWhereOpportunity.ql",
                "problem.severity": "recommendation"
              }
            },
            {
              "id": "SM00462",
              "name": "cs/linq/useless-select",
              "shortDescription": {
                "text": "Redundant Select"
              },
              "fullDescription": {
                "text": "Writing 'seq.Select(e => e)' or 'from e in seq select e' is redundant."
              },
              "properties": {
                "tags": [
  "maintainability",
  "language-features",
  "external/cwe/cwe-561"
],
                "kind": "problem",
                "precision": "very-high",
                "name": "Redundant Select",
                "opaque-id": "SM00462",
                "description": "Writing 'seq.Select(e => e)' or 'from e in seq select e' is redundant.",
                "id": "cs/linq/useless-select",
                "query-path": "/semmlecode-csharp-queries/Linq/RedundantSelect.ql",
                "problem.severity": "warning"
              }
            }
          ]
        }
      },
      "originalUriBaseIds": {
        "%SRCROOT%": {
          "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/Handyman?version=GC5750b2564ac582dd6461d79e13d58453c251fbcb/"
        }
      },
      "artifacts": [
        {
          "location": {
            "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/DevopsWorkItemTrackingClientTests.cs",
            "index": 0
          }
        },
        {
          "location": {
            "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
            "index": 1
          }
        },
        {
          "location": {
            "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Clients/CompCentralClient.cs",
            "index": 2
          }
        },
        {
          "location": {
            "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Helpers/SemmleSampleProblems.cs",
            "index": 3
          }
        },
        {
          "location": {
            "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Models/CompCentralArea.cs",
            "index": 4
          }
        },
        {
          "location": {
            "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Clients/StorageTableClient.cs",
            "index": 5
          }
        },
        {
          "location": {
            "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Clients/AzureKeyVaultClient.cs",
            "index": 6
          }
        },
        {
          "location": {
            "uri": "file:/",
            "index": 7
          }
        },
        {
          "location": {
            "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/CompCentralClientTests.cs",
            "index": 8
          }
        }
      ],
      "results": [
        {
          "ruleId": "SM00259",
          "ruleIndex": 18,
          "message": {
            "text": "Variable [createdWorkItem.Id](1) may be null here because it has a nullable type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/DevopsWorkItemTrackingClientTests.cs",
                  "index": 0
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 118,
                  "endLine": 30,
                  "endColumn": 136,
                  "charOffset": 1184,
                  "charLength": 18
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "2b269fc240580e5e:1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/DevopsWorkItemTrackingClientTests.cs",
                            "index": 0
                          },
                          "region": {
                            "startLine": 23,
                            "startColumn": 22,
                            "endLine": 23,
                            "endColumn": 128,
                            "charOffset": 795,
                            "charLength": 106
                          }
                        },
                        "message": {
                          "text": "0"
                        }
                      },
                      "executionOrder": 1
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/DevopsWorkItemTrackingClientTests.cs",
                            "index": 0
                          },
                          "region": {
                            "startLine": 30,
                            "startColumn": 118,
                            "endLine": 30,
                            "endColumn": 136,
                            "charOffset": 1184,
                            "charLength": 18
                          }
                        },
                        "message": {
                          "text": "1"
                        }
                      },
                      "executionOrder": 2
                    }
                  ]
                }
              ]
            }
          ],
          "relatedLocations": [
            {
              "id": 1,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/DevopsWorkItemTrackingClientTests.cs",
                  "index": 0
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 27,
                  "endLine": 27,
                  "endColumn": 45,
                  "charOffset": 1015,
                  "charLength": 18
                }
              },
              "message": {
                "text": "createdWorkItem.Id"
              }
            }
          ]
        },
        {
          "ruleId": "SM00354",
          "ruleIndex": 85,
          "message": {
            "text": "TODO comment."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 13,
                  "endLine": 115,
                  "endColumn": 66,
                  "charOffset": 6896,
                  "charLength": 53
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "84b1552fccc33fe6:1"
          }
        },
        {
          "ruleId": "SM00241",
          "ruleIndex": 92,
          "message": {
            "text": "Unused field (or field used from dead method only)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Clients/CompCentralClient.cs",
                  "index": 2
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 34,
                  "endLine": 20,
                  "endColumn": 40,
                  "charOffset": 596,
                  "charLength": 6,
                  "snippet": {
                    "text": "logger"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 45,
                  "charOffset": 514,
                  "charLength": 135,
                  "snippet": {
                    "text": "        private readonly HttpClient httpClient;\r\n        private readonly ILogger logger;\r\n        private readonly string clientAppId;"
                  }
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "c595532fd0d35b23:1"
          }
        },
        {
          "ruleId": "SM00242",
          "ruleIndex": 93,
          "message": {
            "text": "Unused method (or method called from dead method only)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Helpers/SemmleSampleProblems.cs",
                  "index": 3
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 29,
                  "endLine": 10,
                  "endColumn": 41,
                  "charOffset": 221,
                  "charLength": 12,
                  "snippet": {
                    "text": "UnusedMethod"
                  }
                },
                "contextRegion": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 11,
                  "endColumn": 10,
                  "charOffset": 186,
                  "charLength": 60,
                  "snippet": {
                    "text": "    {\r\n        private static void UnusedMethod()\r\n        {"
                  }
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "85428acac8c5494e:1"
          }
        },
        {
          "ruleId": "SM00244",
          "ruleIndex": 94,
          "message": {
            "text": "Unused reference type CompCentralArea\\[\\]."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Models/CompCentralArea.cs",
                  "index": 4
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 33,
                  "charOffset": 60,
                  "charLength": 15,
                  "snippet": {
                    "text": "CompCentralArea"
                  }
                },
                "contextRegion": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endLine": 6,
                  "endColumn": 6,
                  "charOffset": 40,
                  "charLength": 42,
                  "snippet": {
                    "text": "{\r\n    public class CompCentralArea\r\n    {"
                  }
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "58e38038332d011a:1"
          }
        },
        {
          "ruleId": "SM00244",
          "ruleIndex": 94,
          "message": {
            "text": "Unused reference type T\\[\\]."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Clients/StorageTableClient.cs",
                  "index": 5
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 43,
                  "endLine": 34,
                  "endColumn": 44,
                  "charOffset": 1250,
                  "charLength": 1,
                  "snippet": {
                    "text": "T"
                  }
                },
                "contextRegion": {
                  "startLine": 33,
                  "startColumn": 1,
                  "endLine": 35,
                  "endColumn": 10,
                  "charOffset": 1184,
                  "charLength": 211,
                  "snippet": {
                    "text": "        /// </summary>\r\n        public async Task InsertOrReplace<T>(string tableName, IEnumerable<T> entities, string partitionKey = null, bool synchronize = false) where T : CustomTableEntity, new()\r\n        {"
                  }
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "20013954767e9dee:1"
          }
        },
        {
          "ruleId": "SM00244",
          "ruleIndex": 94,
          "message": {
            "text": "Unused reference type T\\[\\]."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Clients/StorageTableClient.cs",
                  "index": 5
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 58,
                  "endLine": 85,
                  "endColumn": 59,
                  "charOffset": 3851,
                  "charLength": 1,
                  "snippet": {
                    "text": "T"
                  }
                },
                "contextRegion": {
                  "startLine": 84,
                  "startColumn": 1,
                  "endLine": 86,
                  "endColumn": 10,
                  "charOffset": 3792,
                  "charLength": 139,
                  "snippet": {
                    "text": "\r\n        public async Task<List<T>> GetTableEntitiesAsync<T>(CloudTable cloudTable, string query) where T : ITableEntity, new()\r\n        {"
                  }
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "124b31f195fe8257:1"
          }
        },
        {
          "ruleId": "SM00243",
          "ruleIndex": 95,
          "message": {
            "text": "The field 'lilaServiceApplicationSecret' is never explicitly assigned a value, yet it is read [here](1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Clients/AzureKeyVaultClient.cs",
                  "index": 6
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 31,
                  "endLine": 15,
                  "endColumn": 59,
                  "charOffset": 522,
                  "charLength": 28,
                  "snippet": {
                    "text": "lilaServiceApplicationSecret"
                  }
                },
                "contextRegion": {
                  "startLine": 14,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 1,
                  "charOffset": 437,
                  "charLength": 123,
                  "snippet": {
                    "text": "        private static string devopsAadSecret = null;\r\n        private static string lilaServiceApplicationSecret = null;\r\n"
                  }
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "8bba58fcea8608a7:1"
          },
          "relatedLocations": [
            {
              "id": 1,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Clients/AzureKeyVaultClient.cs",
                  "index": 6
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 17,
                  "endLine": 46,
                  "endColumn": 45,
                  "charOffset": 1686,
                  "charLength": 28,
                  "snippet": {
                    "text": "lilaServiceApplicationSecret"
                  }
                },
                "contextRegion": {
                  "startLine": 45,
                  "startColumn": 1,
                  "endLine": 47,
                  "endColumn": 14,
                  "charOffset": 1659,
                  "charLength": 79,
                  "snippet": {
                    "text": "        {\r\n            if (lilaServiceApplicationSecret == null)\r\n            {"
                  }
                }
              },
              "message": {
                "text": "here"
              }
            }
          ]
        },
        {
          "ruleId": "SM00383",
          "ruleIndex": 107,
          "message": {
            "text": "Field 'lilaServiceApplicationSecret' can be 'readonly'."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Clients/AzureKeyVaultClient.cs",
                  "index": 6
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 31,
                  "endLine": 15,
                  "endColumn": 59,
                  "charOffset": 522,
                  "charLength": 28,
                  "snippet": {
                    "text": "lilaServiceApplicationSecret"
                  }
                },
                "contextRegion": {
                  "startLine": 14,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 1,
                  "charOffset": 437,
                  "charLength": 123,
                  "snippet": {
                    "text": "        private static string devopsAadSecret = null;\r\n        private static string lilaServiceApplicationSecret = null;\r\n"
                  }
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "8bba58fcea8608a7:1"
          }
        },
        {
          "ruleId": "SM02592",
          "ruleIndex": 120,
          "message": {
            "text": "The expression 'A == true' can be simplified to 'A'."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Clients/StorageTableClient.cs",
                  "index": 5
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 17,
                  "endLine": 73,
                  "endColumn": 36,
                  "charOffset": 3190,
                  "charLength": 19,
                  "snippet": {
                    "text": "synchronize == true"
                  }
                },
                "contextRegion": {
                  "startLine": 72,
                  "startColumn": 1,
                  "endLine": 74,
                  "endColumn": 14,
                  "charOffset": 3069,
                  "charLength": 180,
                  "snippet": {
                    "text": "            // Removes deleted records that are not part of the entity for this query and partition key\r\n            if (synchronize == true && partitionKey != null)\r\n            {"
                  }
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "bbdb632ad676d82d:1"
          }
        },
        {
          "ruleId": "SM00336",
          "ruleIndex": 126,
          "message": {
            "text": "Default 'ToString()': [StorageCredentials](1) inherits 'ToString()' from 'Object', and so is not suitable for printing."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 31,
                  "endLine": 52,
                  "endColumn": 51,
                  "charOffset": 2850,
                  "charLength": 20
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "8c041ab79fbc2f89:1"
          },
          "relatedLocations": [
            {
              "id": 1,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:/",
                  "index": 7
                }
              },
              "message": {
                "text": "StorageCredentials"
              }
            }
          ]
        },
        {
          "ruleId": "SM00475",
          "ruleIndex": 149,
          "message": {
            "text": "Disposable 'HttpRequestMessage' is created here but is not disposed."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Clients/CompCentralClient.cs",
                  "index": 2
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 42,
                  "endLine": 70,
                  "endColumn": 14,
                  "charOffset": 2682,
                  "charLength": 145,
                  "snippet": {
                    "text": "new HttpRequestMessage\r\n            {\r\n                Method = HttpMethod.Get,\r\n                RequestUri = new Uri(requestUrl),\r\n            }"
                  }
                },
                "contextRegion": {
                  "startLine": 65,
                  "startColumn": 1,
                  "endLine": 71,
                  "endColumn": 97,
                  "charOffset": 2546,
                  "charLength": 380,
                  "snippet": {
                    "text": "            AuthenticationResult authenticationResult = await GetAuthenticationResultAsync();\r\n            HttpRequestMessage request = new HttpRequestMessage\r\n            {\r\n                Method = HttpMethod.Get,\r\n                RequestUri = new Uri(requestUrl),\r\n            };\r\n            request.Headers.Accept.Add(new MediaTypeWithQualityHeaderValue(\"application/json\"));"
                  }
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "aa1f3926021a4b62:1"
          }
        },
        {
          "ruleId": "SM00475",
          "ruleIndex": 149,
          "message": {
            "text": "Disposable 'KeyVaultClient' is created here but is not disposed."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 39,
                  "endLine": 41,
                  "endColumn": 155,
                  "charOffset": 1953,
                  "charLength": 116
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "be80886adb4568c9:1"
          }
        },
        {
          "ruleId": "SM00475",
          "ruleIndex": 149,
          "message": {
            "text": "Disposable 'KeyVaultClient' is created here but is not disposed."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 39,
                  "endLine": 66,
                  "endColumn": 155,
                  "charOffset": 3469,
                  "charLength": 116
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "be80886adb4568c9:2"
          }
        },
        {
          "ruleId": "SM00475",
          "ruleIndex": 149,
          "message": {
            "text": "Disposable 'KeyVaultClient' is created here but is not disposed."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 39,
                  "endLine": 84,
                  "endColumn": 155,
                  "charOffset": 4785,
                  "charLength": 116
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "be80886adb4568c9:3"
          }
        },
        {
          "ruleId": "SM00475",
          "ruleIndex": 149,
          "message": {
            "text": "Disposable 'HttpClient' is created here but is not disposed."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/CompCentralClientTests.cs",
                  "index": 8
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 37,
                  "endLine": 18,
                  "endColumn": 53,
                  "charOffset": 457,
                  "charLength": 16
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "7cbc5a69e7e3c8be:1"
          }
        },
        {
          "ruleId": "SM00475",
          "ruleIndex": 149,
          "message": {
            "text": "Disposable 'HttpClient' is created here but is not disposed."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/CompCentralClientTests.cs",
                  "index": 8
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 37,
                  "endLine": 29,
                  "endColumn": 53,
                  "charOffset": 1020,
                  "charLength": 16
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "7cbc5a69e7e3c8be:2"
          }
        },
        {
          "ruleId": "SM00338",
          "ruleIndex": 151,
          "message": {
            "text": "Poor logging: use of system output stream."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Core/Helpers/SemmleSampleProblems.cs",
                  "index": 3
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 13,
                  "endLine": 14,
                  "endColumn": 33,
                  "charOffset": 329,
                  "charLength": 20,
                  "snippet": {
                    "text": "Console.WriteLine(i)"
                  }
                },
                "contextRegion": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 10,
                  "charOffset": 289,
                  "charLength": 72,
                  "snippet": {
                    "text": "            int i = 2 + 2;\r\n            Console.WriteLine(i);\r\n        }"
                  }
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "c7c9f8a81c11c7c7:1"
          }
        },
        {
          "ruleId": "SM00338",
          "ruleIndex": 151,
          "message": {
            "text": "Poor logging: use of system output stream."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 13,
                  "endLine": 51,
                  "endColumn": 40,
                  "charOffset": 2790,
                  "charLength": 27
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "de81f1a2774d6b7d:1"
          }
        },
        {
          "ruleId": "SM00338",
          "ruleIndex": 151,
          "message": {
            "text": "Poor logging: use of system output stream."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 13,
                  "endLine": 52,
                  "endColumn": 52,
                  "charOffset": 2832,
                  "charLength": 39
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "8c041ab79fbc2f89:1"
          }
        },
        {
          "ruleId": "SM00338",
          "ruleIndex": 151,
          "message": {
            "text": "Poor logging: use of system output stream."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13,
                  "endLine": 54,
                  "endColumn": 72,
                  "charOffset": 2888,
                  "charLength": 59
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "29c7c985903456ba:1"
          }
        },
        {
          "ruleId": "SM00338",
          "ruleIndex": 151,
          "message": {
            "text": "Poor logging: use of system output stream."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 13,
                  "endLine": 56,
                  "endColumn": 61,
                  "charOffset": 3018,
                  "charLength": 48
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "636dd3ee68a4e353:1"
          }
        },
        {
          "ruleId": "SM00338",
          "ruleIndex": 151,
          "message": {
            "text": "Poor logging: use of system output stream."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 13,
                  "endLine": 58,
                  "endColumn": 115,
                  "charOffset": 3083,
                  "charLength": 102
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "da8bd28ee6ba2960:1"
          }
        },
        {
          "ruleId": "SM00338",
          "ruleIndex": 151,
          "message": {
            "text": "Poor logging: use of system output stream."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 13,
                  "endLine": 140,
                  "endColumn": 73,
                  "charOffset": 8411,
                  "charLength": 60
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "f6e980f912190bf9:1"
          }
        },
        {
          "ruleId": "SM00338",
          "ruleIndex": 151,
          "message": {
            "text": "Poor logging: use of system output stream."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 17,
                  "endLine": 166,
                  "endColumn": 43,
                  "charOffset": 9766,
                  "charLength": 26
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "3d843e07620befda:1"
          }
        },
        {
          "ruleId": "SM00459",
          "ruleIndex": 161,
          "message": {
            "text": "This foreach loop immediately casts its iteration variable to another type [here](1) - consider casting the sequence explicitly using '.Cast(...)'."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 13,
                  "endLine": 138,
                  "endColumn": 14,
                  "charOffset": 7877,
                  "charLength": 518
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "36e270951c956988:1"
          },
          "relatedLocations": [
            {
              "id": 1,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 17,
                  "endLine": 134,
                  "endColumn": 85,
                  "charOffset": 7959,
                  "charLength": 68
                }
              },
              "message": {
                "text": "here"
              }
            }
          ]
        },
        {
          "ruleId": "SM00460",
          "ruleIndex": 163,
          "message": {
            "text": "This foreach loop immediately maps its iteration variable to another variable [here](1) - consider mapping the sequence explicitly using '.Select(...)'."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 13,
                  "endLine": 167,
                  "endColumn": 14,
                  "charOffset": 9344,
                  "charLength": 464
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "4f33ef29a3e8a85f:1"
          },
          "relatedLocations": [
            {
              "id": 1,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "https://litra.visualstudio.com/DefaultCollection/Playground/_git/src/Test.Core/IntegrationTests/AzureStorageAccountClientTests.cs",
                  "index": 1
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 17,
                  "endLine": 158,
                  "endColumn": 62,
                  "charOffset": 9422,
                  "charLength": 45
                }
              },
              "message": {
                "text": "here"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "properties": {
        "semmle.sourceLanguage": "csharp"
      }
    }
  ]
}